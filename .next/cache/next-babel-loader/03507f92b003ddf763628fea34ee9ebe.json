{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Link from \"next/link\";\nimport Cart from \"../Modal/Cart\";\nimport { decryptData } from \"../../store/actions/cartActions\";\nimport axios from \"axios\";\nlet host = process.env.API_URL;\n\nfunction MegaMenu(props) {\n  const {\n    0: cartLength,\n    1: setcartLength\n  } = useState(0);\n  const {\n    0: state,\n    1: setstate\n  } = useState({\n    display: false,\n    searchForm: false,\n    collapsed: true,\n    checkCart: false\n  });\n  const {\n    0: categories,\n    1: setcategories\n  } = useState([]);\n\n  const handleCart = () => {\n    setstate(prevState => {\n      return {\n        display: !prevState.display,\n        collapsed: true\n      };\n    });\n  };\n\n  const handleSearchForm = () => {\n    setstate(prevState => {\n      return {\n        searchForm: !prevState.searchForm\n      };\n    });\n  };\n\n  const toggleNavbar = () => {\n    setstate({\n      collapsed: !state.collapsed\n    });\n  };\n\n  console.log(state);\n\n  const fetchCategories = async () => {\n    try {\n      let res = await axios.get(`${host}/api/user/category/`);\n\n      if (res) {\n        setcategories(res.data.categories);\n      }\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  useEffect(() => {\n    let myProd = localStorage.getItem(process.env.CART_COOKIE) ? localStorage.getItem(process.env.CART_COOKIE) : [];\n    let decryptedData = decryptData(myProd);\n    setcartLength(decryptedData.length);\n  }, [props.products]);\n  useEffect(() => {\n    let elementId = document.getElementById(\"navbar\");\n    document.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 170) {\n        elementId.classList.add(\"is-sticky\");\n      } else {\n        elementId.classList.remove(\"is-sticky\");\n      }\n    });\n    window.scrollTo(0, 0);\n  }, []);\n  const {\n    collapsed\n  } = state;\n  const classOne = collapsed ? \"collapse navbar-collapse\" : \"collapse navbar-collapse show\";\n  const classTwo = collapsed ? \"navbar-toggler navbar-toggler-right collapsed\" : \"navbar-toggler navbar-toggler-right\";\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"navbar-area\"\n  }, __jsx(\"div\", {\n    id: \"navbar\",\n    className: \"comero-nav\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"nav\", {\n    className: \"navbar navbar-expand-md navbar-light\"\n  }, __jsx(\"button\", {\n    onClick: toggleNavbar,\n    className: classTwo,\n    type: \"button\",\n    \"data-toggle\": \"collapse\",\n    \"data-target\": \"#navbarSupportedContent\",\n    \"aria-controls\": \"navbarSupportedContent\",\n    \"aria-expanded\": \"false\",\n    \"aria-label\": \"Toggle navigation\"\n  }, __jsx(\"span\", {\n    className: \"navbar-toggler-icon\"\n  })), __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"img\", {\n    src: require(\"../../images/logos/logo.png\"),\n    alt: \"\",\n    style: {\n      width: \"10rem\"\n    },\n    className: \"navbar_logo\"\n  })), __jsx(\"div\", {\n    className: \"view_cart\"\n  }, __jsx(\"div\", {\n    className: \"notification\"\n  }, __jsx(\"i\", {\n    className: \"fas fa-shopping-bag\",\n    onClick: e => {\n      e.preventDefault();\n      handleCart();\n    }\n  }), __jsx(\"span\", {\n    className: \"badge\",\n    onClick: e => {\n      e.preventDefault();\n      handleCart();\n    }\n  }, cartLength))), __jsx(\"div\", {\n    className: classOne,\n    id: \"navbarSupportedContent\"\n  }, __jsx(\"ul\", {\n    className: \"navbar-nav\"\n  }, categories.length ? __jsx(React.Fragment, null, categories.map((category, i) => {\n    if (category.status) {\n      if (category.sub_categories.length) {\n        return __jsx(\"li\", {\n          key: i,\n          className: \"nav-item p-relative\"\n        }, __jsx(Link, {\n          key: i,\n          href: \"#\"\n        }, __jsx(\"a\", {\n          className: \"nav-link\"\n        }, category.name, \" \", __jsx(\"i\", {\n          className: \"fas fa-chevron-down\"\n        }))), __jsx(\"ul\", {\n          className: \"dropdown-menu\"\n        }, category.sub_categories.map((subCat, i) => {\n          return __jsx(\"li\", {\n            key: i,\n            className: \"nav-item\"\n          }, __jsx(Link, {\n            href: `/subcategory/${subCat.slug}`\n          }, __jsx(\"a\", {\n            className: \"nav-link\"\n          }, subCat.name)));\n        })));\n      } else {\n        return __jsx(\"li\", {\n          key: i,\n          className: \"nav-item megamenu\"\n        }, __jsx(Link, {\n          href: `/category/${category.slug}`\n        }, __jsx(\"a\", {\n          className: \"nav-link\"\n        }, category.name)));\n      }\n    }\n  })) : null), __jsx(\"div\", {\n    className: \"others-option\"\n  }, __jsx(\"div\", {\n    className: \"option-item\"\n  }, __jsx(\"i\", {\n    onClick: handleSearchForm,\n    className: \"search-btn fas fa-search\",\n    style: {\n      display: state.searchForm ? \"none\" : \"block\"\n    }\n  }), __jsx(\"i\", {\n    onClick: handleSearchForm,\n    className: `close-btn fas fa-times ${state.searchForm ? \"active\" : \"\"}`\n  }), __jsx(\"div\", {\n    className: \"search-overlay search-popup\",\n    style: {\n      display: state.searchForm ? \"block\" : \"none\"\n    }\n  }, __jsx(\"div\", {\n    className: \"search-box\"\n  }, __jsx(\"form\", {\n    action: \"/search\",\n    className: \"search-form\"\n  }, __jsx(\"input\", {\n    className: \"search-input\",\n    name: \"search\",\n    placeholder: \"Search\",\n    type: \"text\"\n  }), __jsx(\"button\", {\n    className: \"search-button\",\n    type: \"submit\"\n  }, __jsx(\"i\", {\n    className: \"fas fa-search\"\n  })))))), __jsx(\"div\", {\n    className: \"option-item\"\n  }, __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", {\n    onClick: e => {\n      e.preventDefault();\n      handleCart();\n    }\n  }, \"Cart(\", cartLength, \")\", \" \", __jsx(\"i\", {\n    className: \"fas fa-shopping-bag\"\n  })))))))))), state.display ? __jsx(Cart, {\n    onClick: handleCart\n  }) : \"\");\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.addedItems\n  };\n};\n\nexport default connect(mapStateToProps)(MegaMenu);","map":null,"metadata":{},"sourceType":"module"}