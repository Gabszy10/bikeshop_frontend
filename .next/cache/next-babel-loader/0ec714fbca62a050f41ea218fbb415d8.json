{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { connect } from \"react-redux\";\nimport { ToastContainer, toast, Zoom } from \"react-toastify\";\nimport { resetCart } from \"../../store/actions/cartActions\";\n\nclass Payments extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleClick\", () => {\n      if (this.props.isValid()) {\n        // this.props.resetCart();\n        // toast.success(\"Order has been confirmed\", {\n        //   position: \"top-center\",\n        //   autoClose: 3000,\n        //   hideProgressBar: false,\n        //   closeOnClick: true,\n        //   pauseOnHover: true,\n        //   draggable: true,\n        // });\n        // setTimeout(function () {\n        //   Router.push(\"/thankyou\");\n        // }, 3000);\n        this.props.handleSubmit();\n      }\n    });\n  }\n\n  render() {\n    let {\n      amount\n    } = this.props;\n\n    const onToken = async token => {\n      const body = {\n        amount: amount,\n        token: token\n      };\n      await axios.post(\"/api/stripe/checkout\", body);\n    };\n\n    return __jsx(React.Fragment, null, __jsx(ToastContainer, {\n      transition: Zoom\n    }), __jsx(\"div\", {\n      className: \"order-btn\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.handleClick\n    }, \"Place Order\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetCart: () => {\n      dispatch(resetCart());\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Payments);","map":null,"metadata":{},"sourceType":"module"}