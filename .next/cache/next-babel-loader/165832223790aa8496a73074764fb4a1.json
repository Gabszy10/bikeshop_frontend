{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport OrderSummary from \"../checkout/OrderSummary\";\nimport Link from \"next/link\";\nimport ShippingSummary from \"../checkout/ShippingSummary\";\nimport { decryptData, clearData, encryptData } from \"../../store/actions/cartActions\";\nimport { decryptInfoData, encryptString } from \"../../store/actions/infoActions\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport Paypal from \"./Paypal\";\nimport cookie from \"js-cookie\";\nimport { formatDate } from \"../../helpers/function\";\nimport { Slide, toast, ToastContainer } from \"react-toastify\";\nimport { useDispatch } from \"react-redux\";\nlet host = process.env.API_URL;\n\nfunction PaymentMethods() {\n  const dispatch = useDispatch();\n  const {\n    0: selectedPayment,\n    1: setselectedPayment\n  } = useState(\"\");\n  const {\n    0: isCampaign,\n    1: setisCampaign\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setisLoading\n  } = useState(false);\n  const {\n    0: isCodOn,\n    1: setisCodOn\n  } = useState(false);\n  useEffect(() => {\n    let encryptedInfoData = localStorage.getItem(process.env.INFO_COOKIE);\n    let stateSchema = decryptInfoData(encryptedInfoData);\n\n    if (stateSchema.shipping_city.value.toLowerCase().includes(\"makati\") || stateSchema.shipping_address.value.toLowerCase().includes(\"makati\") || [1226, 1233, 1209, 1214, 1217, 1221, 1222, 1219, 1220, 1202, 1201, 1228, 1212, 1211, 1206, 1204, 1229, 1232, 1224, 1200, 1207, 1235, 1231, 1218, 1213, 1230, 1210, 1216, 1215, 1227, 1203, 1234, 1223, 1205, 1225, 1208].includes(parseInt(stateSchema.shipping_zip.value))) {\n      setisCodOn(true);\n    }\n\n    let decryptedData = decryptInfoData();\n\n    if (decryptedData) {\n      if (decryptedData.delivery_date.value == \"2023-02-14\") {\n        setisCampaign(true);\n      }\n    } // toast.error(err.response.data[0].message);\n    // console.log(, \"HEYYYY\");\n\n  }, []);\n\n  const handleChange = value => {\n    setselectedPayment(value);\n  };\n\n  const fetchUser = async token => {\n    try {\n      let res = await axios.get(`${host}/api/user/user/details`, {\n        headers: {\n          Authorization: token\n        }\n      });\n\n      if (res.data.userDetails) {\n        return res.data.userDetails[\"id\"];\n      } else {\n        return 0;\n      }\n    } catch (error) {\n      localStorage.removeItem(\"token\");\n      this.props.history.push(\"/login\");\n      toast.error(\"Your token is invalid or expired.\");\n    }\n  };\n\n  const handleChangePrice = products => {\n    let cartStorage = localStorage.getItem(process.env.CART_COOKIE);\n    let cartArray = decryptData(cartStorage);\n\n    for (let i = 0; i < products.length; i++) {\n      const el = products[i];\n      var index = cartArray.findIndex(item => item.id === el.productId);\n\n      if (index > -1) {\n        cartArray[index][\"campaign_price\"] = el.campaign_price;\n        cartArray[index][\"discount_price\"] = el.discount_price;\n      }\n\n      let encryptedData = encryptData(JSON.stringify(cartArray));\n      localStorage.setItem(process.env.CART_COOKIE, encryptedData);\n      dispatch((() => {\n        return {\n          type: \"UPDATE_CART\"\n        };\n      })());\n    }\n  };\n\n  const handleSubmit = async paymentMethod => {\n    let userId = 0;\n    let token = cookie.get(\"_wus_BJK\");\n\n    if (token) {\n      try {\n        userId = await fetchUser(token);\n      } catch (error) {}\n    }\n\n    setisLoading(true);\n    let encryptedData = localStorage.getItem(process.env.CART_COOKIE);\n    let encryptedInfoData = localStorage.getItem(process.env.INFO_COOKIE);\n    let cart = decryptData(encryptedData);\n    let stateSchema = decryptInfoData(encryptedInfoData);\n    let orderItems = [];\n\n    for (let i = 0; i < cart.length; i++) {\n      let obj = null;\n\n      if (isCampaign) {\n        obj = {\n          productId: cart[i].id,\n          name: cart[i].name,\n          quantity: cart[i].quantity,\n          itemPrice: cart[i].campaign_price\n        };\n      } else {\n        obj = {\n          productId: cart[i].id,\n          name: cart[i].name,\n          quantity: cart[i].quantity,\n          itemPrice: cart[i].discount_price\n        };\n      }\n\n      orderItems.push(obj);\n    }\n\n    let order = {\n      orderItems: orderItems,\n      userId: userId,\n      shippingFirstName: stateSchema.shipping_firstName.value,\n      shippingLastName: stateSchema.shipping_lastName.value,\n      shippingPhone: stateSchema.shipping_phone.value,\n      shippingAddress: stateSchema.shipping_address.value,\n      shippingCity: stateSchema.shipping_city.value,\n      shippingProvince: \"Metro Manila\",\n      shippingZip: stateSchema.shipping_zip.value,\n      deliveryInstructions: stateSchema.note.value,\n      message: stateSchema.message.value,\n      billingFirstName: stateSchema.billing_firstName.value,\n      billingLastName: stateSchema.billing_lastName.value,\n      billingPhone: stateSchema.billing_phone.value,\n      billingEmail: stateSchema.billing_email.value,\n      deliveryDate: stateSchema.delivery_date.value,\n      deliveryTime: stateSchema.delivery_time.value,\n      paymentMethod: paymentMethod,\n      isCampaign: isCampaign\n    };\n\n    try {\n      const res = await axios.post(`${host}/api/user/order`, order);\n\n      if (res) {\n        let encryptedData = encryptString(res.data.order_name); // return console.log(encryptedData, encryptedData);\n\n        let sendEmailRes = await axios.post(`${host}/api/user/order/sendEmail`, {\n          billingEmail: order.billingEmail,\n          billingFirstName: order.billingFirstName,\n          orderName: res.data.order_name,\n          cryptoStr: encryptedData,\n          orderItems: orderItems,\n          paymentMethod: paymentMethod,\n          deliveryDate: formatDate(stateSchema.delivery_date.value)\n        });\n\n        if (sendEmailRes) {\n          clearData();\n          Router.push(`/thankyou/${encryptedData}`);\n        }\n      }\n    } catch (err) {\n      setisLoading(false);\n      console.log(err.response.data);\n      console.log(err.response.data[0].message);\n\n      if (err.response) {\n        if (err.response.data) {\n          if (err.response.data[0]) {\n            if (err.response.data[0].updatedOrderItems) {\n              handleChangePrice(err.response.data[0].updatedOrderItems);\n            }\n\n            return toast.error(err.response.data[0].message);\n          }\n        }\n      } else {\n        toast.error(\"Something went wrong, Please try again or contact us.\");\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"pt-40\"\n  }, __jsx(ToastContainer, {\n    transition: Slide\n  }), __jsx(\"div\", {\n    className: \"row\",\n    style: {\n      marginLeft: \"0px\",\n      marginRight: \"0px\"\n    }\n  }, __jsx(\"div\", {\n    className: \"col-lg-5 col-md-5\"\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"d-flex\"\n  }, __jsx(\"h5\", null, \"User Details\"), __jsx(Link, {\n    href: \"/checkout\"\n  }, __jsx(\"a\", {\n    className: \"ml-auto btn btn-link text-danger\"\n  }, \"Edit\"))), __jsx(ShippingSummary, null)), __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"d-flex\"\n  }, __jsx(\"h5\", null, \"Order Details\"), __jsx(Link, {\n    href: \"/cart\"\n  }, __jsx(\"a\", {\n    className: \"ml-auto btn btn-link text-danger\"\n  }, \"Edit\"))), __jsx(OrderSummary, null))), __jsx(\"div\", {\n    className: \"col-lg-7 col-md-7\"\n  }, __jsx(\"h5\", {\n    className: \"text-center\"\n  }, \"Select Payment Method\"), __jsx(\"div\", {\n    className: \"order-details\"\n  }, __jsx(\"div\", {\n    className: \"payment-method\",\n    style: {\n      paddingTop: 0,\n      marginTop: \"20px\",\n      marginLeft: \"0.5rem\",\n      marginRight: \"0.5rem\"\n    }\n  }, __jsx(\"div\", null, __jsx(\"p\", null, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"direct-bank-transfer\",\n    name: \"radio-button\",\n    onChange: () => handleChange(\"bank\")\n  }), __jsx(\"label\", {\n    htmlFor: \"direct-bank-transfer\"\n  }, \"Direct Bank Transfer\"), selectedPayment == \"bank\" ? __jsx(React.Fragment, null, __jsx(\"hr\", null), __jsx(\"img\", {\n    src: require(\"../../images/logos/banks2.jpg\"),\n    alt: \"image\",\n    height: \"150\"\n  }), __jsx(\"p\", {\n    style: {\n      paddingTop: \"20px\"\n    }\n  }, \"Once the order is completed, you can settle the amount into our BPI account (via deposit or bank transfer)\"), __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"d-flex justify-content-between\",\n    style: {\n      maxWidth: \"300px\"\n    }\n  }, __jsx(\"h6\", null, \"Bank:\"), __jsx(\"h6\", null, \"BPI\")), __jsx(\"div\", {\n    className: \"d-flex justify-content-between\",\n    style: {\n      maxWidth: \"300px\"\n    }\n  }, __jsx(\"h6\", null, \"Account Name:\"), __jsx(\"h6\", null, \"I-Wheels\")), __jsx(\"div\", {\n    className: \"d-flex justify-content-between\",\n    style: {\n      maxWidth: \"300px\"\n    }\n  }, __jsx(\"h6\", null, \"Account Number:\"), __jsx(\"h6\", null, \"3039022566\"))), __jsx(\"p\", {\n    style: {\n      color: \"red\",\n      paddingTop: \"20px\"\n    }\n  }, __jsx(\"b\", null, \"Note:\"), \" Please send proof of payment (screenshot, printscreen) to\", \" \", __jsx(\"span\", {\n    style: {\n      color: \"#33bd33\"\n    }\n  }, \"i-Wheels26@gmail.com\"), \" \", \"or send a message to our\", \" \", __jsx(\"a\", {\n    className: \"d-inline\",\n    href: \"https://www.facebook.com/i-Wheelsph-127061742122440/\"\n  }, \"Facebook Page\"), \".\"), __jsx(\"br\", null), __jsx(\"br\", null), !isLoading ? __jsx(\"button\", {\n    onClick: () => handleSubmit(\"Bank - BPI\"),\n    className: \"btn btn-light mb-3\"\n  }, \"Confirm Order\") : __jsx(\"div\", {\n    className: \"lds-ring\"\n  }, __jsx(\"div\", null), __jsx(\"div\", null), __jsx(\"div\", null), __jsx(\"div\", null)), __jsx(\"hr\", null)) : null)), __jsx(\"div\", null, __jsx(\"p\", null, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"cash-on-delivery\",\n    name: \"radio-button\",\n    onChange: () => handleChange(\"cod\")\n  }), __jsx(\"label\", {\n    htmlFor: \"cash-on-delivery\"\n  }, \"Cash on Delivery\"), selectedPayment == \"cod\" ? __jsx(React.Fragment, null, __jsx(\"hr\", null), __jsx(\"img\", {\n    src: require(\"../../images/logos/cod.jpg\"),\n    alt: \"image\",\n    height: \"100\"\n  }), __jsx(\"p\", {\n    style: {\n      paddingTop: \"10px\"\n    }\n  }, \"When using our Cash on Delivery service, payment is given to our delivery rider upon receipt of item.\"), __jsx(\"br\", null), !isLoading ? __jsx(\"button\", {\n    onClick: () => handleSubmit(\"COD\"),\n    className: \"btn btn-light mb-3\"\n  }, \"Confirm Order\") : __jsx(\"div\", {\n    className: \"lds-ring\"\n  }, __jsx(\"div\", null), __jsx(\"div\", null), __jsx(\"div\", null), __jsx(\"div\", null)), __jsx(\"hr\", null)) : null)), __jsx(\"div\", null, __jsx(\"p\", null, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"gcash\",\n    name: \"radio-button\",\n    onChange: () => handleChange(\"gcash\")\n  }), __jsx(\"label\", {\n    htmlFor: \"gcash\"\n  }, \"GCash\"), selectedPayment == \"gcash\" ? __jsx(React.Fragment, null, __jsx(\"hr\", null), __jsx(\"img\", {\n    src: require(\"../../images/logos/gcash.png\"),\n    alt: \"image\",\n    height: \"70\"\n  }), __jsx(\"p\", {\n    style: {\n      paddingTop: \"20px\"\n    }\n  }, \"Once the order is completed, you can settle the amount into our Gcash account (via deposit or bank transfer)\"), __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"d-flex justify-content-between\",\n    style: {\n      maxWidth: \"300px\"\n    }\n  }, __jsx(\"h6\", null, \"E-Wallet:\"), __jsx(\"h6\", null, \"GCash\")), __jsx(\"div\", {\n    className: \"d-flex justify-content-between\",\n    style: {\n      maxWidth: \"300px\"\n    }\n  }, __jsx(\"h6\", null, \"Account Name:\"), __jsx(\"h6\", null, \"Marxs Joshua\")), __jsx(\"div\", {\n    className: \"d-flex justify-content-between\",\n    style: {\n      maxWidth: \"300px\"\n    }\n  }, __jsx(\"h6\", null, \"Mobile Number:\"), __jsx(\"h6\", null, \"09214430131\"))), __jsx(\"p\", {\n    style: {\n      color: \"red\",\n      paddingTop: \"20px\"\n    }\n  }, __jsx(\"b\", null, \"Note:\"), \" Please send proof of payment (screenshot, printscreen) to\", \" \", __jsx(\"span\", {\n    style: {\n      color: \"#33bd33\"\n    }\n  }, \"i-Wheels26@gmail.com\"), \" \", \"or send a message to our\", \" \", __jsx(\"a\", {\n    className: \"d-inline\",\n    href: \"https://www.facebook.com/i-Wheelsph-127061742122440/\"\n  }, \"Facebook Page\"), \".\"), __jsx(\"br\", null), !isLoading ? __jsx(\"button\", {\n    onClick: () => handleSubmit(\"GCash\"),\n    className: \"btn btn-light mb-3\"\n  }, \"Confirm Order\") : __jsx(\"div\", {\n    className: \"lds-ring\"\n  }, __jsx(\"div\", null), __jsx(\"div\", null), __jsx(\"div\", null), __jsx(\"div\", null)), __jsx(\"hr\", null)) : null)), __jsx(\"div\", null, __jsx(\"p\", null, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"paymaya\",\n    name: \"radio-button\",\n    onChange: () => handleChange(\"paymaya\")\n  }), __jsx(\"label\", {\n    htmlFor: \"paymaya\"\n  }, \"Paymaya\"), selectedPayment == \"paymaya\" ? __jsx(React.Fragment, null, __jsx(\"hr\", null), __jsx(\"img\", {\n    src: require(\"../../images/logos/paymaya.jpg\"),\n    alt: \"image\",\n    height: \"50\"\n  }), __jsx(\"p\", {\n    style: {\n      paddingTop: \"20px\"\n    }\n  }, \"Once the order is completed, you can settle the amount into our Paymaya account (via deposit or bank transfer)\"), __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"d-flex justify-content-between\",\n    style: {\n      maxWidth: \"300px\"\n    }\n  }, __jsx(\"h6\", null, \"E-Wallet:\"), __jsx(\"h6\", null, \"Paymaya\")), __jsx(\"div\", {\n    className: \"d-flex justify-content-between\",\n    style: {\n      maxWidth: \"300px\"\n    }\n  }, __jsx(\"h6\", null, \"Account Name:\"), __jsx(\"h6\", null, \"I-Wheels\")), __jsx(\"div\", {\n    className: \"d-flex justify-content-between\",\n    style: {\n      maxWidth: \"300px\"\n    }\n  }, __jsx(\"h6\", null, \"Mobile Number:\"), __jsx(\"h6\", null, \"0916 509 1083\"))), __jsx(\"p\", {\n    style: {\n      color: \"red\",\n      paddingTop: \"20px\"\n    }\n  }, __jsx(\"b\", null, \"Note:\"), \" Please send proof of payment (screenshot, printscreen) to\", \" \", __jsx(\"span\", {\n    style: {\n      color: \"#33bd33\"\n    }\n  }, \"i-Wheels26@gmail.com\"), \" \", \"or send a message to our\", \" \", __jsx(\"a\", {\n    className: \"d-inline\",\n    href: \"https://www.facebook.com/i-Wheelsph-127061742122440/\"\n  }, \"Facebook Page\"), \".\"), __jsx(\"br\", null), !isLoading ? __jsx(\"button\", {\n    onClick: () => handleSubmit(\"Paymaya\"),\n    className: \"btn btn-light mb-3\"\n  }, \"Confirm Order\") : __jsx(\"div\", {\n    className: \"lds-ring\"\n  }, __jsx(\"div\", null), __jsx(\"div\", null), __jsx(\"div\", null), __jsx(\"div\", null)), __jsx(\"hr\", null)) : null)))))));\n}\n\nexport default PaymentMethods;","map":null,"metadata":{},"sourceType":"module"}