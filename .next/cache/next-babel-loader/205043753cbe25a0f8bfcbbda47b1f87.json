{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corde\\\\Desktop\\\\New folder\\\\bikeshop\\\\bikeshop_frontend\\\\components\\\\payments\\\\Paypal.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { set } from \"js-cookie\";\nimport React, { useEffect, useState } from \"react\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { decryptData } from \"../../store/actions/cartActions\";\nimport { decryptInfoData } from \"../../store/actions/infoActions\";\n\nfunction Paypal(props) {\n  _s();\n\n  var _useState = useState(null),\n      paymentOptions = _useState[0],\n      setpaymentOptions = _useState[1];\n\n  var _useState2 = useState(false),\n      isCampaign = _useState2[0],\n      setisCampaign = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      memo = _useState3[0],\n      setmemo = _useState3[1];\n\n  useEffect(function () {\n    var decryptedData = decryptInfoData();\n\n    if (decryptedData) {\n      if (decryptedData.delivery_date.value == \"2023-02-14\") {\n        setisCampaign(true);\n      }\n\n      setmemo(\"\\n      \".concat(decryptedData.billing_phone.value, \"\\n      \").concat(decryptedData.billing_email.value, \"\\n      \").concat(decryptedData.delivery_time.value, \"\\n      \").concat(decryptedData.delivery_date.value, \"\\n      \").concat(decryptedData.note.value, \"\\n      \").concat(decryptedData.message.value, \"\\n      \").concat(decryptedData.shipping_phone.value, \"\\n      \").concat(decryptedData.shipping_address.value, \"\\n      \"));\n    }\n  }, []);\n  useEffect(function () {\n    var encryptedData = localStorage.getItem(process.env.CART_COOKIE);\n    var cart = decryptData(encryptedData);\n    var total = 0;\n    var items = [];\n\n    for (var i = 0; i < cart.length; i++) {\n      var obj = null;\n\n      if (isCampaign) {\n        obj = {\n          name: cart[i].name,\n          quantity: cart[i].quantity,\n          price: cart[i].campaign_price,\n          currency: \"PHP\"\n        };\n      } else {\n        obj = {\n          name: cart[i].name,\n          quantity: cart[i].quantity,\n          price: cart[i].discount_price,\n          currency: \"PHP\"\n        };\n      }\n\n      items.push(obj);\n\n      if (isCampaign) {\n        total = total + cart[i].campaign_price * cart[i].quantity;\n      } else {\n        total = total + cart[i].discount_price * cart[i].quantity;\n      }\n    }\n\n    total = total + 120;\n    items.push({\n      name: \"Paypal Transfer Fee\",\n      quantity: 1,\n      price: 120,\n      currency: \"PHP\"\n    });\n    setpaymentOptions({\n      intent: \"authorize\",\n      payer: {\n        payment_method: \"paypal\"\n      },\n      transactions: [{\n        amount: {\n          total: total,\n          currency: \"PHP\"\n        },\n        description: memo,\n        item_list: {\n          items: items\n        }\n      }],\n      note_to_payer: \"Contact us for any questions on your order.\",\n      redirect_urls: {\n        return_url: \"https://example.com/return\",\n        cancel_url: \"https://example.com/cancel\"\n      }\n    });\n  }, [isCampaign, memo]);\n\n  var onSuccess = function onSuccess(payment) {\n    // 1, 2, and ... Poof! You made it, everything's fine and dandy!\n    console.log(\"Payment successful!\", payment); // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n\n    props.handleSubmit(\"Paypal\");\n  };\n\n  var onCancel = function onCancel(data) {\n    // The user pressed \"cancel\" or closed the PayPal popup\n    console.log(\"Payment cancelled!\", data); // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n  };\n\n  var onError = function onError(err) {\n    // The main Paypal script could not be loaded or something blocked the script from loading\n    console.log(\"Error!\", err); // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n    // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n  };\n\n  var env = process.env.PAYPAL_CONFIG; // you can set this string to 'production'\n\n  var currency = \"PHP\"; // you can set this string from your props or state\n\n  var total = 1; // this is the total amount (based on currency) to charge\n  // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n\n  var client = {\n    sandbox: process.env.PAYPAL_SANDBOX,\n    production: process.env.PAYPAL_LIVE\n  }; // In order to get production's app-ID, you will have to send your app to Paypal for approval first\n  // For your sandbox Client-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\" unless you have already done so):\n  //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n  // Note: IGNORE the Sandbox test AppID - this is ONLY for Adaptive APIs, NOT REST APIs)\n  // For production app-ID:\n  //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n  // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\n\n  return __jsx(PaypalExpressBtn, {\n    paymentOptions: paymentOptions,\n    env: env,\n    client: client,\n    currency: currency,\n    total: total,\n    onError: onError,\n    onSuccess: onSuccess,\n    onCancel: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(Paypal, \"zXUW5OMeWzrkvpbhTveJhjes0iU=\");\n\n_c = Paypal;\nexport default Paypal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paypal\");","map":{"version":3,"sources":["C:/Users/corde/Desktop/New folder/bikeshop/bikeshop_frontend/components/payments/Paypal.js"],"names":["set","React","useEffect","useState","PaypalExpressBtn","decryptData","decryptInfoData","Paypal","props","paymentOptions","setpaymentOptions","isCampaign","setisCampaign","memo","setmemo","decryptedData","delivery_date","value","billing_phone","billing_email","delivery_time","note","message","shipping_phone","shipping_address","encryptedData","localStorage","getItem","process","env","CART_COOKIE","cart","total","items","i","length","obj","name","quantity","price","campaign_price","currency","discount_price","push","intent","payer","payment_method","transactions","amount","description","item_list","note_to_payer","redirect_urls","return_url","cancel_url","onSuccess","payment","console","log","handleSubmit","onCancel","data","onError","err","PAYPAL_CONFIG","client","sandbox","PAYPAL_SANDBOX","production","PAYPAL_LIVE"],"mappings":"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","sourcesContent":["import { set } from \"js-cookie\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\r\nimport { decryptData } from \"../../store/actions/cartActions\";\r\nimport { decryptInfoData } from \"../../store/actions/infoActions\";\r\n\r\nfunction Paypal(props) {\r\n  const [paymentOptions, setpaymentOptions] = useState(null);\r\n  const [isCampaign, setisCampaign] = useState(false);\r\n  const [memo, setmemo] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let decryptedData = decryptInfoData();\r\n    if (decryptedData) {\r\n      if (decryptedData.delivery_date.value == \"2023-02-14\") {\r\n        setisCampaign(true);\r\n      }\r\n\r\n      setmemo(`\r\n      ${decryptedData.billing_phone.value}\r\n      ${decryptedData.billing_email.value}\r\n      ${decryptedData.delivery_time.value}\r\n      ${decryptedData.delivery_date.value}\r\n      ${decryptedData.note.value}\r\n      ${decryptedData.message.value}\r\n      ${decryptedData.shipping_phone.value}\r\n      ${decryptedData.shipping_address.value}\r\n      `);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let encryptedData = localStorage.getItem(process.env.CART_COOKIE);\r\n    let cart = decryptData(encryptedData);\r\n\r\n    let total = 0;\r\n    let items = [];\r\n    for (let i = 0; i < cart.length; i++) {\r\n      let obj = null;\r\n\r\n      if (isCampaign) {\r\n        obj = {\r\n          name: cart[i].name,\r\n          quantity: cart[i].quantity,\r\n          price: cart[i].campaign_price,\r\n          currency: \"PHP\",\r\n        };\r\n      } else {\r\n        obj = {\r\n          name: cart[i].name,\r\n          quantity: cart[i].quantity,\r\n          price: cart[i].discount_price,\r\n          currency: \"PHP\",\r\n        };\r\n      }\r\n\r\n      items.push(obj);\r\n\r\n      if (isCampaign) {\r\n        total = total + cart[i].campaign_price * cart[i].quantity;\r\n      } else {\r\n        total = total + cart[i].discount_price * cart[i].quantity;\r\n      }\r\n    }\r\n    total = total + 120;\r\n\r\n    items.push({\r\n      name: \"Paypal Transfer Fee\",\r\n      quantity: 1,\r\n      price: 120,\r\n      currency: \"PHP\",\r\n    });\r\n\r\n    setpaymentOptions({\r\n      intent: \"authorize\",\r\n      payer: {\r\n        payment_method: \"paypal\",\r\n      },\r\n      transactions: [\r\n        {\r\n          amount: {\r\n            total: total,\r\n            currency: \"PHP\",\r\n          },\r\n          description: memo,\r\n          item_list: {\r\n            items,\r\n          },\r\n        },\r\n      ],\r\n      note_to_payer: \"Contact us for any questions on your order.\",\r\n      redirect_urls: {\r\n        return_url: \"https://example.com/return\",\r\n        cancel_url: \"https://example.com/cancel\",\r\n      },\r\n    });\r\n  }, [isCampaign, memo]);\r\n\r\n  const onSuccess = (payment) => {\r\n    // 1, 2, and ... Poof! You made it, everything's fine and dandy!\r\n    console.log(\"Payment successful!\", payment);\r\n    // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n\r\n    props.handleSubmit(\"Paypal\");\r\n  };\r\n\r\n  const onCancel = (data) => {\r\n    // The user pressed \"cancel\" or closed the PayPal popup\r\n    console.log(\"Payment cancelled!\", data);\r\n    // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n  };\r\n\r\n  const onError = (err) => {\r\n    // The main Paypal script could not be loaded or something blocked the script from loading\r\n    console.log(\"Error!\", err);\r\n    // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n    // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n  };\r\n\r\n  let env = process.env.PAYPAL_CONFIG; // you can set this string to 'production'\r\n  let currency = \"PHP\"; // you can set this string from your props or state\r\n  let total = 1; // this is the total amount (based on currency) to charge\r\n  // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n\r\n  const client = {\r\n    sandbox: process.env.PAYPAL_SANDBOX,\r\n    production: process.env.PAYPAL_LIVE,\r\n  };\r\n\r\n  // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n  // For your sandbox Client-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\" unless you have already done so):\r\n  //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n  // Note: IGNORE the Sandbox test AppID - this is ONLY for Adaptive APIs, NOT REST APIs)\r\n  // For production app-ID:\r\n  //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n\r\n  // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n  return (\r\n    <PaypalExpressBtn\r\n      paymentOptions={paymentOptions}\r\n      env={env}\r\n      client={client}\r\n      currency={currency}\r\n      total={total}\r\n      onError={onError}\r\n      onSuccess={onSuccess}\r\n      onCancel={onCancel}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Paypal;\r\n"]},"metadata":{},"sourceType":"module"}