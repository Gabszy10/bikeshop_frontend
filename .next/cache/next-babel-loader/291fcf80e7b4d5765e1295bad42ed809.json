{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\corde\\\\Desktop\\\\New folder\\\\bikeshop\\\\bikeshop_frontend\\\\components\\\\chatbot\\\\ActionProvider.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\n\nvar ActionProvider = function ActionProvider(_ref) {\n  var createChatBotMessage = _ref.createChatBotMessage,\n      setState = _ref.setState,\n      children = _ref.children;\n\n  var handleHello = function handleHello() {\n    var botMessage = createChatBotMessage('Hello. Nice to meet you.');\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        messages: [].concat(_toConsumableArray(prev.messages), [botMessage])\n      });\n    });\n  };\n\n  var handleDog = function handleDog() {\n    var botMessage = createChatBotMessage(\"Here's a nice dog picture for you!\", {\n      widget: 'dogPicture'\n    });\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        messages: [].concat(_toConsumableArray(prev.messages), [botMessage])\n      });\n    });\n  }; // Put the handleHello and handleDog function in the actions object to pass to the MessageParser\n\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.Children.map(children, function (child) {\n    return React.cloneElement(child, {\n      actions: {\n        handleHello: handleHello,\n        handleDog: handleDog\n      }\n    });\n  }));\n};\n\n_c = ActionProvider;\nexport default ActionProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionProvider\");","map":{"version":3,"sources":["C:/Users/corde/Desktop/New folder/bikeshop/bikeshop_frontend/components/chatbot/ActionProvider.js"],"names":["React","ActionProvider","createChatBotMessage","setState","children","handleHello","botMessage","prev","messages","handleDog","widget","Children","map","child","cloneElement","actions"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAkD;AAAA,MAA/CC,oBAA+C,QAA/CA,oBAA+C;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACvE,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAMC,UAAU,GAAGJ,oBAAoB,CAAC,0BAAD,CAAvC;AAEAC,IAAAA,QAAQ,CAAC,UAACI,IAAD;AAAA,6CACJA,IADI;AAEPC,QAAAA,QAAQ,+BAAMD,IAAI,CAACC,QAAX,IAAqBF,UAArB;AAFD;AAAA,KAAD,CAAR;AAID,GAPD;;AASA,MAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAMH,UAAU,GAAGJ,oBAAoB,CACrC,oCADqC,EAErC;AACEQ,MAAAA,MAAM,EAAE;AADV,KAFqC,CAAvC;AAOAP,IAAAA,QAAQ,CAAC,UAACI,IAAD;AAAA,6CACJA,IADI;AAEPC,QAAAA,QAAQ,+BAAMD,IAAI,CAACC,QAAX,IAAqBF,UAArB;AAFD;AAAA,KAAD,CAAR;AAID,GAZD,CAVuE,CAwBvE;;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACW,QAAN,CAAeC,GAAf,CAAmBR,QAAnB,EAA6B,UAACS,KAAD,EAAW;AACvC,WAAOb,KAAK,CAACc,YAAN,CAAmBD,KAAnB,EAA0B;AAC/BE,MAAAA,OAAO,EAAE;AACPV,QAAAA,WAAW,EAAXA,WADO;AAEPI,QAAAA,SAAS,EAATA;AAFO;AADsB,KAA1B,CAAP;AAMD,GAPA,CADH,CADF;AAYD,CArCD;;KAAMR,c;AAuCN,eAAeA,cAAf","sourcesContent":["import React from 'react';\r\n\r\nconst ActionProvider = ({ createChatBotMessage, setState, children }) => {\r\n  const handleHello = () => {\r\n    const botMessage = createChatBotMessage('Hello. Nice to meet you.');\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      messages: [...prev.messages, botMessage],\r\n    }));\r\n  };\r\n\r\n  const handleDog = () => {\r\n    const botMessage = createChatBotMessage(\r\n      \"Here's a nice dog picture for you!\",\r\n      {\r\n        widget: 'dogPicture',\r\n      }\r\n    );\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      messages: [...prev.messages, botMessage],\r\n    }));\r\n  };\r\n\r\n  // Put the handleHello and handleDog function in the actions object to pass to the MessageParser\r\n  return (\r\n    <div>\r\n      {React.Children.map(children, (child) => {\r\n        return React.cloneElement(child, {\r\n          actions: {\r\n            handleHello,\r\n            handleDog,\r\n          },\r\n        });\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionProvider;"]},"metadata":{},"sourceType":"module"}