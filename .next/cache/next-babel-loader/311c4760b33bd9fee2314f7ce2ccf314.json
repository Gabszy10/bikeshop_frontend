{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport cookie from \"js-cookie\";\nimport axios from \"axios\";\nimport { formatNumber } from \"../../helpers/function\";\nimport { decryptInfoData, encryptInfoData } from \"../../store/actions/infoActions\";\nlet host = process.env.API_URL;\n\nfunction Profile() {\n  const {\n    0: history,\n    1: sethistory\n  } = useState([]);\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const {\n    0: orderDetails,\n    1: setorderDetails\n  } = useState(null);\n  useEffect(() => {\n    let token = cookie.get(\"_wus_BJK\");\n\n    if (!token) {// window.location.href = \"/\";\n    } else {\n      fetchOrders(token);\n      fetchUserInfo(token);\n    }\n  }, []);\n\n  const fetchUserInfo = async token => {\n    try {\n      let res = await axios.get(`${host}/api/user/user/details`, {\n        headers: {\n          Authorization: `${token}`\n        }\n      });\n\n      if (res) {\n        setUser(res.data.userDetails);\n        let decryptedData = decryptInfoData();\n        console.log(decryptedData);\n\n        let newData = _objectSpread(_objectSpread({}, decryptedData), {}, {\n          shipping_firstName: {\n            value: \"\",\n            error: \"\"\n          },\n          shipping_lastName: {\n            value: \"\",\n            error: \"\"\n          },\n          shipping_address: {\n            value: \"\",\n            error: \"\"\n          },\n          shipping_city: {\n            value: \"\",\n            error: \"\"\n          },\n          shipping_zip: {\n            value: \"\",\n            error: \"\"\n          },\n          billing_email: {\n            value: res.data.userDetails.email || \"\",\n            error: \"\"\n          },\n          shipping_phone: {\n            value: \"\",\n            error: \"\"\n          },\n          billing_firstName: {\n            value: res.data.userDetails.first_name || \"\",\n            error: \"\"\n          },\n          billing_lastName: {\n            value: res.data.userDetails.last_name || \"\",\n            error: \"\"\n          },\n          billing_phone: {\n            value: \"\",\n            error: \"\"\n          },\n          note: {\n            value: \"\",\n            error: \"\"\n          },\n          message: {\n            value: \"\",\n            error: \"\"\n          },\n          delivery_date: {\n            value: \"\",\n            error: \"\"\n          },\n          delivery_time: {\n            value: \"\",\n            error: \"\"\n          }\n        });\n\n        console.log(newData);\n        encryptInfoData(newData);\n      }\n\n      console.log(res);\n    } catch (error) {\n      if (error.response.status == 401) {\n        cookie.remove(\"_wus_BJK\");\n        window.location.href = \"/\";\n      }\n    }\n  };\n\n  const fetchOrders = async token => {\n    try {\n      let res = await axios.get(`${host}/api/user/order/history`, {\n        headers: {\n          Authorization: `${token}`\n        }\n      });\n\n      if (res) {\n        sethistory(res.data.orders);\n      }\n\n      console.log(res);\n    } catch (error) {\n      if (error.response.status == 401) {\n        cookie.remove(\"_wus_BJK\");\n        window.location.href = \"/\";\n      }\n\n      if (error.response.data.err == \"user order history not found\") {\n        sethistory([]);\n      }\n    }\n  };\n\n  const handleDetails = () => {};\n\n  return __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-4\"\n  }, __jsx(\"div\", {\n    className: \"card\",\n    style: {\n      marginLeft: \"1.7rem\"\n    }\n  }, __jsx(\"div\", {\n    className: \"card-body m-auto text-center\"\n  }, __jsx(\"img\", {\n    src: \"https://t3.ftcdn.net/jpg/03/39/45/96/360_F_339459697_XAFacNQmwnvJRqe1Fe9VOptPWMUxlZP8.jpg\",\n    alt: \"\",\n    height: \"100\",\n    style: {\n      borderRadius: \"50%\",\n      marginBottom: \"1rem\"\n    }\n  }), __jsx(\"h5\", {\n    className: \"card-title\"\n  }, user ? user.first_name : \"N/A\", \" \", user ? user.last_name : \"N/A\")))), history.length ? __jsx(\"div\", {\n    className: \"col-md-8\"\n  }, history.map((order, i) => {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      key: i,\n      class: \"card\"\n    }, __jsx(\"div\", {\n      className: \"card-header\"\n    }, __jsx(\"h5\", null, order.order_name), __jsx(\"p\", null, order.created_at)), __jsx(\"div\", {\n      className: \"card-body\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-4\"\n    }, __jsx(\"p\", {\n      className: \"card-text\"\n    }, \"Items:\"), order.order_items.map(item => __jsx(\"p\", {\n      key: item.product_id,\n      className: \"card-text\"\n    }, item.product.name, \" - \", item.quantity, \"x\"))), __jsx(\"div\", {\n      className: \"col-md-4\"\n    }, __jsx(\"p\", {\n      className: \"card-text\"\n    }, \"Mode Of Payment: \", order.payment_method), __jsx(\"p\", {\n      className: \"card-text\"\n    }, \"Payment Status: \", order.payment_status.name)), __jsx(\"div\", {\n      className: \"col-md-4\"\n    }, __jsx(\"p\", {\n      className: \"card-text\"\n    }, \"Order Status: \", order.order_status.name), __jsx(\"p\", {\n      className: \"card-text\"\n    }, \"Amount: P\", formatNumber(order.total)))))), __jsx(\"hr\", null));\n  })) : __jsx(\"h2\", {\n    className: \"text-center m-auto\"\n  }, \"Order history is empty.\"), __jsx(\"div\", {\n    className: \"modal fade\",\n    id: \"exampleModal\",\n    tabIndex: \"-1\",\n    role: \"dialog\",\n    \"aria-labelledby\": \"exampleModalLabel\",\n    \"aria-hidden\": \"true\"\n  }, __jsx(\"div\", {\n    className: \"modal-dialog\",\n    role: \"document\"\n  }, __jsx(\"div\", {\n    className: \"modal-content\"\n  }, __jsx(\"div\", {\n    className: \"modal-header\"\n  }, __jsx(\"h5\", {\n    className: \"modal-title\",\n    id: \"exampleModalLabel\"\n  }, \"Modal title\"), __jsx(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-d\": \"modal\",\n    \"aria-label\": \"Close\"\n  }, __jsx(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\"))), __jsx(\"div\", {\n    className: \"modal-body\"\n  }, \"...\"), __jsx(\"div\", {\n    className: \"modal-footer\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-dismiss\": \"modal\"\n  }, \"Close\"), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\"\n  }, \"Save changes\"))))));\n}\n\nexport default Profile;","map":null,"metadata":{},"sourceType":"module"}