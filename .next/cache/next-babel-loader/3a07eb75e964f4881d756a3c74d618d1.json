{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addToCart, addToCompare } from '../../store/actions/cartActions';\nimport Link from 'next/link';\nimport ReactTooltip from 'react-tooltip';\nimport { ToastContainer, toast, Slide } from 'react-toastify';\nimport QuickView from '../Modal/QuickView';\n\nclass BestSeller extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      modalOpen: false,\n      modalImage: '',\n      price: 0,\n      idd: null\n    });\n\n    _defineProperty(this, \"handleAddToCart\", id => {\n      this.props.addToCart(id);\n      toast.success('Added to the cart', {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    });\n\n    _defineProperty(this, \"handleAddToCompare\", id => {\n      this.props.addToCompare(id);\n      toast.success('Added to the compare', {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    });\n\n    _defineProperty(this, \"compareButton\", id => {\n      let compare_exist = this.props.CompareProducts.filter(item => item.id === id);\n\n      if (compare_exist.length > 0) {\n        return __jsx(Link, {\n          href: \"#\"\n        }, __jsx(\"a\", {\n          \"data-tip\": \"Already Added\",\n          \"data-place\": \"left\",\n          onClick: e => {\n            e.preventDefault();\n          },\n          disabled: true,\n          className: \"disabled\"\n        }, __jsx(\"i\", {\n          className: \"fas fa-sync\"\n        })));\n      } else {\n        return __jsx(Link, {\n          href: \"#\"\n        }, __jsx(\"a\", {\n          \"data-tip\": \"Add to Compare\",\n          \"data-place\": \"left\",\n          onClick: e => {\n            e.preventDefault();\n            this.handleAddToCompare(id);\n          }\n        }, __jsx(\"i\", {\n          className: \"fas fa-sync\"\n        })));\n      }\n    });\n\n    _defineProperty(this, \"openModal\", () => {\n      this.setState({\n        modalOpen: true\n      });\n    });\n\n    _defineProperty(this, \"closeModal\", () => {\n      this.setState({\n        modalOpen: false\n      });\n    });\n\n    _defineProperty(this, \"handleModalData\", (image, price, id) => {\n      this.setState({\n        modalImage: image,\n        price: price,\n        idd: id\n      });\n    });\n  }\n\n  render() {\n    let {\n      products\n    } = this.props;\n    const {\n      modalOpen\n    } = this.state;\n    return __jsx(\"section\", {\n      className: \"best-sellers-area pb-60\"\n    }, __jsx(ReactTooltip, null), __jsx(ToastContainer, {\n      transition: Slide\n    }), __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"div\", {\n      className: \"section-title\"\n    }, __jsx(\"h2\", null, __jsx(\"span\", {\n      className: \"dot\"\n    }), \" Best Sellers\")), __jsx(\"div\", {\n      className: \"row\"\n    }, products.map((data, idx) => __jsx(\"div\", {\n      className: \"col-lg-3 col-sm-6 col-6\",\n      key: idx\n    }, __jsx(\"div\", {\n      className: \"single-product-box\"\n    }, __jsx(\"div\", {\n      className: \"product-image\"\n    }, __jsx(Link, {\n      href: \"/product/product-details\"\n    }, __jsx(\"a\", null, __jsx(\"img\", {\n      src: data.image,\n      alt: \"image\"\n    }), __jsx(\"img\", {\n      src: data.imageHover,\n      alt: \"image\"\n    }))), __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      \"data-tip\": \"Quick View\",\n      \"data-place\": \"left\",\n      onClick: e => {\n        e.preventDefault();\n        this.openModal();\n        this.handleModalData(data.quickView, data.price, data.id);\n      }\n    }, __jsx(\"i\", {\n      className: \"far fa-eye\"\n    })))), __jsx(\"li\", null, __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      \"data-tip\": \"Add to Wishlist\",\n      \"data-place\": \"left\"\n    }, __jsx(\"i\", {\n      className: \"far fa-heart\"\n    })))), __jsx(\"li\", null, this.compareButton(data.id)))), __jsx(\"div\", {\n      className: \"product-content\"\n    }, __jsx(\"h3\", null, __jsx(Link, {\n      href: \"/product/product-details\"\n    }, __jsx(\"a\", null, data.title))), __jsx(\"div\", {\n      className: \"product-price\"\n    }, __jsx(\"span\", {\n      className: \"new-price\"\n    }, \"$\", data.price)), __jsx(\"div\", {\n      className: \"rating\"\n    }, __jsx(\"i\", {\n      className: \"fas fa-star\"\n    }), __jsx(\"i\", {\n      className: \"fas fa-star\"\n    }), __jsx(\"i\", {\n      className: \"fas fa-star\"\n    }), __jsx(\"i\", {\n      className: \"fas fa-star\"\n    }), __jsx(\"i\", {\n      className: \"far fa-star\"\n    })), __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      className: \"btn btn-light\",\n      onClick: e => {\n        e.preventDefault();\n        this.handleAddToCart(data.id);\n      }\n    }, \"Add to Cart\")))))))), modalOpen ? __jsx(QuickView, {\n      closeModal: this.closeModal,\n      idd: this.state.idd,\n      image: this.state.modalImage,\n      price: this.state.price\n    }) : '');\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products,\n    CompareProducts: state.addedItemsToCompare\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: id => {\n      dispatch(addToCart(id));\n    },\n    addToCompare: id => {\n      dispatch(addToCompare(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BestSeller);","map":null,"metadata":{},"sourceType":"module"}