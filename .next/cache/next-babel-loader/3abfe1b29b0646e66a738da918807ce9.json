{"ast":null,"code":"var CryptoJS = require(\"crypto-js\");\n\nexport const encryptInfoData = data => {\n  try {\n    let encryptedData = CryptoJS.AES.encrypt(JSON.stringify(data), process.env.INFO_KEY).toString();\n    localStorage.setItem(process.env.INFO_COOKIE, encryptedData);\n    return true;\n  } catch (error) {\n    console.log(error);\n    localStorage.removeItem(process.env.INFO_COOKIE);\n    return false;\n  }\n};\nexport const decryptInfoData = () => {\n  try {\n    let infoItem = localStorage.getItem(process.env.INFO_COOKIE) ? localStorage.getItem(process.env.INFO_COOKIE) : null;\n\n    if (infoItem) {\n      let bytes = CryptoJS.AES.decrypt(infoItem, process.env.INFO_KEY);\n      let stringArray = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n      return stringArray;\n    } else {\n      return false;\n    }\n  } catch (error) {\n    console.log(error);\n    localStorage.removeItem(process.env.INFO_COOKIE);\n    return false;\n  }\n};\nexport const encryptString = data => {\n  try {\n    let encryptedData = encodeURIComponent(CryptoJS.AES.encrypt(JSON.stringify(data), process.env.INFO_KEY).toString());\n    return encryptedData;\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};\nexport const decryptString = data => {\n  try {\n    if (data) {\n      let bytes = CryptoJS.AES.decrypt(data, process.env.INFO_KEY);\n      let stringArray = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n      return decodeURIComponent(stringArray);\n    } else {\n      return false;\n    }\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};","map":{"version":3,"sources":["C:/Users/corde/Desktop/New folder/bikeshop/bikeshop_frontend/store/actions/infoActions.js"],"names":["CryptoJS","require","encryptInfoData","data","encryptedData","AES","encrypt","JSON","stringify","process","env","INFO_KEY","toString","localStorage","setItem","INFO_COOKIE","error","console","log","removeItem","decryptInfoData","infoItem","getItem","bytes","decrypt","stringArray","parse","enc","Utf8","encryptString","encodeURIComponent","decryptString","decodeURIComponent"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AAEA,OAAO,MAAMC,eAAe,GAAIC,IAAD,IAAU;AACvC,MAAI;AACF,QAAIC,aAAa,GAAGJ,QAAQ,CAACK,GAAT,CAAaC,OAAb,CAClBC,IAAI,CAACC,SAAL,CAAeL,IAAf,CADkB,EAElBM,OAAO,CAACC,GAAR,CAAYC,QAFM,EAGlBC,QAHkB,EAApB;AAKAC,IAAAA,YAAY,CAACC,OAAb,CAAqBL,OAAO,CAACC,GAAR,CAAYK,WAAjC,EAA8CX,aAA9C;AACA,WAAO,IAAP;AACD,GARD,CAQE,OAAOY,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAH,IAAAA,YAAY,CAACM,UAAb,CAAwBV,OAAO,CAACC,GAAR,CAAYK,WAApC;AACA,WAAO,KAAP;AACD;AACF,CAdM;AAgBP,OAAO,MAAMK,eAAe,GAAG,MAAM;AACnC,MAAI;AACF,QAAIC,QAAQ,GAAGR,YAAY,CAACS,OAAb,CAAqBb,OAAO,CAACC,GAAR,CAAYK,WAAjC,IACXF,YAAY,CAACS,OAAb,CAAqBb,OAAO,CAACC,GAAR,CAAYK,WAAjC,CADW,GAEX,IAFJ;;AAGA,QAAIM,QAAJ,EAAc;AACZ,UAAIE,KAAK,GAAGvB,QAAQ,CAACK,GAAT,CAAamB,OAAb,CAAqBH,QAArB,EAA+BZ,OAAO,CAACC,GAAR,CAAYC,QAA3C,CAAZ;AACA,UAAIc,WAAW,GAAGlB,IAAI,CAACmB,KAAL,CAAWH,KAAK,CAACX,QAAN,CAAeZ,QAAQ,CAAC2B,GAAT,CAAaC,IAA5B,CAAX,CAAlB;AACA,aAAOH,WAAP;AACD,KAJD,MAIO;AACL,aAAO,KAAP;AACD;AACF,GAXD,CAWE,OAAOT,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEAH,IAAAA,YAAY,CAACM,UAAb,CAAwBV,OAAO,CAACC,GAAR,CAAYK,WAApC;AACA,WAAO,KAAP;AACD;AACF,CAlBM;AAoBP,OAAO,MAAMc,aAAa,GAAI1B,IAAD,IAAU;AACrC,MAAI;AACF,QAAIC,aAAa,GAAG0B,kBAAkB,CACpC9B,QAAQ,CAACK,GAAT,CAAaC,OAAb,CACEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CADF,EAEEM,OAAO,CAACC,GAAR,CAAYC,QAFd,EAGEC,QAHF,EADoC,CAAtC;AAOA,WAAOR,aAAP;AACD,GATD,CASE,OAAOY,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,KAAP;AACD;AACF,CAdM;AAgBP,OAAO,MAAMe,aAAa,GAAI5B,IAAD,IAAU;AACrC,MAAI;AACF,QAAIA,IAAJ,EAAU;AACR,UAAIoB,KAAK,GAAGvB,QAAQ,CAACK,GAAT,CAAamB,OAAb,CAAqBrB,IAArB,EAA2BM,OAAO,CAACC,GAAR,CAAYC,QAAvC,CAAZ;AACA,UAAIc,WAAW,GAAGlB,IAAI,CAACmB,KAAL,CAAWH,KAAK,CAACX,QAAN,CAAeZ,QAAQ,CAAC2B,GAAT,CAAaC,IAA5B,CAAX,CAAlB;AACA,aAAOI,kBAAkB,CAACP,WAAD,CAAzB;AACD,KAJD,MAIO;AACL,aAAO,KAAP;AACD;AACF,GARD,CAQE,OAAOT,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,WAAO,KAAP;AACD;AACF,CAdM","sourcesContent":["var CryptoJS = require(\"crypto-js\");\r\n\r\nexport const encryptInfoData = (data) => {\r\n  try {\r\n    let encryptedData = CryptoJS.AES.encrypt(\r\n      JSON.stringify(data),\r\n      process.env.INFO_KEY\r\n    ).toString();\r\n\r\n    localStorage.setItem(process.env.INFO_COOKIE, encryptedData);\r\n    return true;\r\n  } catch (error) {\r\n    console.log(error);\r\n    localStorage.removeItem(process.env.INFO_COOKIE);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const decryptInfoData = () => {\r\n  try {\r\n    let infoItem = localStorage.getItem(process.env.INFO_COOKIE)\r\n      ? localStorage.getItem(process.env.INFO_COOKIE)\r\n      : null;\r\n    if (infoItem) {\r\n      let bytes = CryptoJS.AES.decrypt(infoItem, process.env.INFO_KEY);\r\n      let stringArray = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n      return stringArray;\r\n    } else {\r\n      return false;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n\r\n    localStorage.removeItem(process.env.INFO_COOKIE);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const encryptString = (data) => {\r\n  try {\r\n    let encryptedData = encodeURIComponent(\r\n      CryptoJS.AES.encrypt(\r\n        JSON.stringify(data),\r\n        process.env.INFO_KEY\r\n      ).toString()\r\n    );\r\n\r\n    return encryptedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const decryptString = (data) => {\r\n  try {\r\n    if (data) {\r\n      let bytes = CryptoJS.AES.decrypt(data, process.env.INFO_KEY);\r\n      let stringArray = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n      return decodeURIComponent(stringArray);\r\n    } else {\r\n      return false;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n\r\n    return false;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}