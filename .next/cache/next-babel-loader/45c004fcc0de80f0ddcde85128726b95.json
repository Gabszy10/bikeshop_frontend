{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corde\\\\Desktop\\\\New folder\\\\bikeshop\\\\bikeshop_frontend\\\\components\\\\chatbot\\\\ActionProvider.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\n\nconst ActionProvider = ({\n  createChatBotMessage,\n  setState,\n  children\n}) => {\n  const handleHello = () => {\n    const botMessage = createChatBotMessage('Hello. Nice to meet you.');\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      messages: [...prev.messages, botMessage]\n    }));\n  };\n\n  const handleDog = () => {\n    const botMessage = createChatBotMessage(\"Here's a nice dog picture for you!\", {\n      widget: 'dogPicture'\n    });\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      messages: [...prev.messages, botMessage]\n    }));\n  }; // Put the handleHello and handleDog function in the actions object to pass to the MessageParser\n\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.Children.map(children, child => {\n    return React.cloneElement(child, {\n      actions: {\n        handleHello,\n        handleDog\n      }\n    });\n  }));\n};\n\nexport default ActionProvider;","map":{"version":3,"sources":["C:/Users/corde/Desktop/New folder/bikeshop/bikeshop_frontend/components/chatbot/ActionProvider.js"],"names":["React","ActionProvider","createChatBotMessage","setState","children","handleHello","botMessage","prev","messages","handleDog","widget","Children","map","child","cloneElement","actions"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,oBAAF;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA;AAAlC,CAAD,KAAkD;AACvE,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAMC,UAAU,GAAGJ,oBAAoB,CAAC,0BAAD,CAAvC;AAEAC,IAAAA,QAAQ,CAAEI,IAAD,oCACJA,IADI;AAEPC,MAAAA,QAAQ,EAAE,CAAC,GAAGD,IAAI,CAACC,QAAT,EAAmBF,UAAnB;AAFH,MAAD,CAAR;AAID,GAPD;;AASA,QAAMG,SAAS,GAAG,MAAM;AACtB,UAAMH,UAAU,GAAGJ,oBAAoB,CACrC,oCADqC,EAErC;AACEQ,MAAAA,MAAM,EAAE;AADV,KAFqC,CAAvC;AAOAP,IAAAA,QAAQ,CAAEI,IAAD,oCACJA,IADI;AAEPC,MAAAA,QAAQ,EAAE,CAAC,GAAGD,IAAI,CAACC,QAAT,EAAmBF,UAAnB;AAFH,MAAD,CAAR;AAID,GAZD,CAVuE,CAwBvE;;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACW,QAAN,CAAeC,GAAf,CAAmBR,QAAnB,EAA8BS,KAAD,IAAW;AACvC,WAAOb,KAAK,CAACc,YAAN,CAAmBD,KAAnB,EAA0B;AAC/BE,MAAAA,OAAO,EAAE;AACPV,QAAAA,WADO;AAEPI,QAAAA;AAFO;AADsB,KAA1B,CAAP;AAMD,GAPA,CADH,CADF;AAYD,CArCD;;AAuCA,eAAeR,cAAf","sourcesContent":["import React from 'react';\r\n\r\nconst ActionProvider = ({ createChatBotMessage, setState, children }) => {\r\n  const handleHello = () => {\r\n    const botMessage = createChatBotMessage('Hello. Nice to meet you.');\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      messages: [...prev.messages, botMessage],\r\n    }));\r\n  };\r\n\r\n  const handleDog = () => {\r\n    const botMessage = createChatBotMessage(\r\n      \"Here's a nice dog picture for you!\",\r\n      {\r\n        widget: 'dogPicture',\r\n      }\r\n    );\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      messages: [...prev.messages, botMessage],\r\n    }));\r\n  };\r\n\r\n  // Put the handleHello and handleDog function in the actions object to pass to the MessageParser\r\n  return (\r\n    <div>\r\n      {React.Children.map(children, (child) => {\r\n        return React.cloneElement(child, {\r\n          actions: {\r\n            handleHello,\r\n            handleDog,\r\n          },\r\n        });\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionProvider;"]},"metadata":{},"sourceType":"module"}