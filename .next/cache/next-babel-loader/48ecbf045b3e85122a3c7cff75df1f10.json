{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport { connect } from \"react-redux\";\nimport CartProduct from \"./CartProduct\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport { formatNumber, isDateBeforeToday } from \"../../helpers/function\";\nimport { addToCartAddons as _addToCartAddons, decryptData } from \"../../store/actions/cartActions\";\nimport Calendar from \"../calendar/Calendar\";\nimport { decryptInfoData, encryptInfoData } from \"../../store/actions/infoActions\";\nimport ForceAddon from \"../shop-style-one/ForceAddon\";\n\nfunction CartContent(props) {\n  var _useState = useState([]),\n      cart = _useState[0],\n      setcart = _useState[1];\n\n  var _useState2 = useState(0),\n      total = _useState2[0],\n      settotal = _useState2[1];\n\n  var _useState3 = useState([]),\n      addon = _useState3[0],\n      setAddon = _useState3[1];\n\n  var _useState4 = useState(false),\n      isCampaign = _useState4[0],\n      setisCampaign = _useState4[1];\n\n  var _useState5 = useState({\n    delivery_date: \"\",\n    delivery_time: \"\",\n    note: \"\",\n    message: \"\"\n  }),\n      state = _useState5[0],\n      setstate = _useState5[1];\n\n  useEffect(function () {\n    var decryptedData = decryptInfoData();\n\n    if (decryptedData) {\n      if (decryptedData.delivery_date.value == \"2023-02-14\") {\n        setisCampaign(true);\n      }\n\n      setstate({\n        delivery_date: decryptedData.delivery_date.value,\n        delivery_time: decryptedData.delivery_time.value,\n        note: decryptedData.note.value,\n        message: decryptedData.message.value\n      });\n    }\n  }, []);\n  useEffect(function () {}, [addon]);\n  useEffect(function () {\n    var encryptedData = localStorage.getItem(process.env.CART_COOKIE) ? localStorage.getItem(process.env.CART_COOKIE) : [];\n    var myProd = decryptData(encryptedData);\n\n    if (myProd.length <= 0) {\n      alert(\"You dont have any items in your cart.\");\n      return window.location.href = \"/\";\n    }\n\n    var myTotal = 0;\n\n    for (var i = 0; i < myProd.length; i++) {\n      if (isCampaign) {\n        myTotal = myTotal + myProd[i].campaign_price * myProd[i].quantity;\n      } else {\n        myTotal = myTotal + myProd[i].discount_price * myProd[i].quantity;\n      }\n    }\n\n    var addonTotal = 0;\n    addon.forEach(function (item, i) {\n      addonTotal += item.discount_price;\n    });\n    settotal(myTotal + addonTotal);\n  }, [cart, isCampaign, addon]);\n\n  function handleOnChange(event) {\n    var name = event.target.name;\n    var value = event.target.value;\n    console.log(name, value);\n    setstate(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, name, value));\n    }); // handleStateChange(event);\n  }\n\n  function handleCalendarChange(e) {\n    var name = e.target.name;\n    var value = e.target.value;\n\n    if (value == \"2023-02-14\") {\n      setisCampaign(true);\n    } else {\n      setisCampaign(false);\n    }\n\n    setstate(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, name, value));\n    });\n  }\n\n  var isValid = function isValid() {\n    if (!state.delivery_date) {\n      toast.error(\"Please select delivery date.\", {\n        position: \"bottom-left\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n      return false;\n    } else if (!state.delivery_time) {\n      toast.error(\"Please select delivery time.\", {\n        position: \"bottom-left\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n      return false;\n    } else if (isDateBeforeToday(state.delivery_date)) {\n      toast.error(\"Please select present date.\", {\n        position: \"bottom-left\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  var proceedToCheckout = function proceedToCheckout() {\n    if (isValid()) {\n      if (addon.length) {\n        props.addToCartAddons(addon, 1);\n      }\n\n      var delivery_date = state.delivery_date,\n          delivery_time = state.delivery_time,\n          note = state.note,\n          message = state.message;\n      var decryptedData = decryptInfoData();\n\n      if (decryptedData) {\n        var obj = _objectSpread(_objectSpread({}, decryptedData), {}, {\n          note: {\n            value: note,\n            error: \"\"\n          },\n          message: {\n            value: message,\n            error: \"\"\n          },\n          delivery_date: {\n            value: delivery_date,\n            error: \"\"\n          },\n          delivery_time: {\n            value: delivery_time,\n            error: \"\"\n          }\n        });\n\n        encryptInfoData(obj);\n      } else {\n        var _obj = {\n          shipping_firstName: {\n            value: \"\",\n            error: \"\"\n          },\n          shipping_lastName: {\n            value: \"\",\n            error: \"\"\n          },\n          shipping_address: {\n            value: \"\",\n            error: \"\"\n          },\n          shipping_city: {\n            value: \"\",\n            error: \"\"\n          },\n          shipping_zip: {\n            value: \"\",\n            error: \"\"\n          },\n          billing_email: {\n            value: \"\",\n            error: \"\"\n          },\n          shipping_phone: {\n            value: \"\",\n            error: \"\"\n          },\n          billing_firstName: {\n            value: \"\",\n            error: \"\"\n          },\n          billing_lastName: {\n            value: \"\",\n            error: \"\"\n          },\n          billing_phone: {\n            value: \"\",\n            error: \"\"\n          },\n          note: {\n            value: note,\n            error: \"\"\n          },\n          message: {\n            value: message,\n            error: \"\"\n          },\n          delivery_date: {\n            value: delivery_date,\n            error: \"\"\n          },\n          delivery_time: {\n            value: delivery_time,\n            error: \"\"\n          }\n        };\n        encryptInfoData(_obj);\n      }\n\n      Router.push(\"/checkout\");\n    }\n  };\n\n  return __jsx(\"section\", {\n    className: \"cart-area ptb-60\"\n  }, __jsx(ToastContainer, {\n    transition: Slide\n  }), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  }, __jsx(\"form\", null, __jsx(\"div\", {\n    className: \"cart-table table-responsive\"\n  }, __jsx(CartProduct, {\n    setcart: setcart,\n    isCampaign: isCampaign\n  })), __jsx(\"br\", null), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Delivery Time\"), __jsx(\"div\", {\n    \"class\": \"form-group\"\n  }, __jsx(\"select\", {\n    \"class\": \"form-control\",\n    id: \"exampleFormControlSelect1\",\n    name: \"delivery_time\",\n    onChange: handleOnChange\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"Select time\"), __jsx(\"option\", {\n    value: \"9am - 2pm\",\n    selected: state.delivery_time == \"9am - 2pm\" ? true : false\n  }, \"9am - 2pm\"), __jsx(\"option\", {\n    value: \"2pm - 5pm\",\n    selected: state.delivery_time == \"2pm - 5pm\" ? true : false\n  }, \"2pm - 6pm\"), __jsx(\"option\", {\n    value: \"6pm - 9pm\",\n    selected: state.delivery_time == \"6pm - 9pm\" ? true : false\n  }, \"6pm - 9pm\"), __jsx(\"option\", {\n    value: \"Anytime\",\n    selected: state.delivery_time == \"Anytime\" ? true : false\n  }, \"Anytime\"))))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"label\", null, \"Delivery Date\"), __jsx(\"div\", {\n    \"class\": \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    value: state.delivery_date,\n    readOnly: true\n  })), __jsx(Calendar, {\n    handleStateChange: handleCalendarChange,\n    date: state.delivery_date != \"\" ? state.delivery_date : null\n  }))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Delivery Instruction (Optional)\", \" \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"textarea\", {\n    name: \"note\",\n    id: \"notes\",\n    cols: \"30\",\n    rows: \"6\",\n    value: state.note,\n    onChange: handleOnChange,\n    placeholder: \"Instruction to delivery rider\",\n    className: \"form-control\"\n  }))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Message (Optional) \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"textarea\", {\n    name: \"message\",\n    id: \"messages\",\n    cols: \"30\",\n    rows: \"6\",\n    value: state.message,\n    onChange: handleOnChange,\n    placeholder: \"Your message to receiver\",\n    className: \"form-control\"\n  }))), __jsx(ForceAddon, {\n    setAddon: setAddon\n  }), __jsx(\"div\", {\n    className: \"cart-totals\"\n  }, __jsx(\"h3\", null, \"Cart Totals\"), __jsx(\"ul\", null, __jsx(\"li\", null, \"Subtotal \", __jsx(\"span\", null, \"\\u20B1\", formatNumber(total))), __jsx(\"li\", null, \"Total\", \" \", __jsx(\"span\", null, __jsx(\"b\", null, \"\\u20B1\", formatNumber(total))))), total < 800 && __jsx(\"p\", {\n    style: {\n      color: \"red\"\n    }\n  }, \"Minimum order is \\u20B1800. If order is below \\u20B1800, you will be charge to get to the 800 limit.\"), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-6\"\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", {\n    style: {\n      marginBottom: \"0.5rem\"\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-angle-double-left\",\n    style: {\n      marginRight: \"5px\"\n    }\n  }), \"Back to Shop\"))), __jsx(\"div\", {\n    className: \"col-md-6\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    onClick: proceedToCheckout,\n    className: \"btn btn-light proceed-checkout\"\n  }, \"CONTINUE\")))))))));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    products: state.addedItems,\n    total: state.total,\n    shipping: state.shipping\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addShipping: function addShipping() {\n      dispatch({\n        type: \"ADD_SHIPPING\"\n      });\n    },\n    substractShipping: function substractShipping() {\n      dispatch({\n        type: \"SUB_SHIPPING\"\n      });\n    },\n    addToCartAddons: function addToCartAddons(products, qty) {\n      dispatch(_addToCartAddons(products, qty));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContent);","map":null,"metadata":{},"sourceType":"module"}