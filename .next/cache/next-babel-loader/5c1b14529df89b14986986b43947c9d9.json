{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport cookie from \"js-cookie\";\n\nvar CryptoJS = require(\"crypto-js\");\n\nlet host = process.env.API_URL;\nexport const userRegister = (userData, setIsLoading, cb) => async dispatch => {\n  try {\n    const res = await axios.post(`${host}/api/user/auth/signUp`, userData); // // save the new token from our fucking api to the cookies\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = await res.data;\n      cookie.set(\"_wus_BJK\", token, {\n        expires: 7\n      });\n      cookie.set(\"user\", user, {\n        expires: 7\n      });\n      cb();\n    }\n  } catch (err) {\n    setIsLoading(false);\n    console.log(err);\n\n    if (err.response.data.error) {\n      return toast.error(err.response.data.error);\n    }\n\n    if (err.response.data.details[0].message) {\n      return toast.error(err.response.data.details[0].message);\n    }\n  }\n};\nexport const userLogin = (userData, setIsLoading, cb) => async dispatch => {\n  try {\n    const res = await axios.post(`${host}/api/user/auth/signIn`, userData); // // save the new token from our fucking api to the cookies\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = await res.data;\n      cookie.set(\"_wus_BJK\", token, {\n        expires: 7\n      });\n      cookie.set(\"user\", user, {\n        expires: 7\n      });\n      cb();\n    }\n  } catch (err) {\n    setIsLoading(false);\n    console.log(err);\n\n    if (err.response.data.error) {\n      return toast.error(err.response.data.error);\n    }\n\n    if (err.response.data.details[0].message) {\n      return toast.error(err.response.data.details[0].message);\n    }\n  }\n};\nexport const logout = () => {\n  cookie.remove(\"_wus_BJK\");\n  window.location.href = \"/\";\n};\nexport const encryptUserData = data => {\n  try {\n    let encryptedData = CryptoJS.AES.encrypt(JSON.stringify(data), process.env.USER_KEY).toString();\n    localStorage.setItem(process.env.USER_COOKIE, encryptedData);\n    return true;\n  } catch (error) {\n    console.log(error);\n    localStorage.removeItem(process.env.USER_COOKIE);\n    return false;\n  }\n};\nexport const decryptUserData = () => {\n  try {\n    let infoItem = localStorage.getItem(process.env.USER_COOKIE) ? localStorage.getItem(process.env.USER_COOKIE) : null;\n\n    if (infoItem) {\n      let bytes = CryptoJS.AES.decrypt(infoItem, process.env.USER_KEY);\n      let stringArray = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n      return stringArray;\n    } else {\n      return false;\n    }\n  } catch (error) {\n    console.log(error);\n    localStorage.removeItem(process.env.USER_COOKIE);\n    return false;\n  }\n};","map":{"version":3,"sources":["C:/Users/corde/Desktop/New folder/bikeshop/bikeshop_frontend/store/actions/userActions.js"],"names":["axios","toast","cookie","CryptoJS","require","host","process","env","API_URL","userRegister","userData","setIsLoading","cb","dispatch","res","post","status","token","user","data","set","expires","err","console","log","response","error","details","message","userLogin","logout","remove","window","location","href","encryptUserData","encryptedData","AES","encrypt","JSON","stringify","USER_KEY","toString","localStorage","setItem","USER_COOKIE","removeItem","decryptUserData","infoItem","getItem","bytes","decrypt","stringArray","parse","enc","Utf8"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAAvB;AAEA,OAAO,MAAMC,YAAY,GACvB,CAACC,QAAD,EAAWC,YAAX,EAAyBC,EAAzB,KAAgC,MAAOC,QAAP,IAAoB;AAClD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAY,GAAEV,IAAK,uBAAnB,EAA2CK,QAA3C,CAAlB,CADE,CAGF;;AACA,QAAII,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkB,MAAMJ,GAAG,CAACK,IAAlC;AACAjB,MAAAA,MAAM,CAACkB,GAAP,CAAW,UAAX,EAAuBH,KAAvB,EAA8B;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAA9B;AACAnB,MAAAA,MAAM,CAACkB,GAAP,CAAW,MAAX,EAAmBF,IAAnB,EAAyB;AAAEG,QAAAA,OAAO,EAAE;AAAX,OAAzB;AACAT,MAAAA,EAAE;AACH;AACF,GAVD,CAUE,OAAOU,GAAP,EAAY;AACZX,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,QAAIA,GAAG,CAACG,QAAJ,CAAaN,IAAb,CAAkBO,KAAtB,EAA6B;AAC3B,aAAOzB,KAAK,CAACyB,KAAN,CAAYJ,GAAG,CAACG,QAAJ,CAAaN,IAAb,CAAkBO,KAA9B,CAAP;AACD;;AAED,QAAIJ,GAAG,CAACG,QAAJ,CAAaN,IAAb,CAAkBQ,OAAlB,CAA0B,CAA1B,EAA6BC,OAAjC,EAA0C;AACxC,aAAO3B,KAAK,CAACyB,KAAN,CAAYJ,GAAG,CAACG,QAAJ,CAAaN,IAAb,CAAkBQ,OAAlB,CAA0B,CAA1B,EAA6BC,OAAzC,CAAP;AACD;AACF;AACF,CAvBI;AAyBP,OAAO,MAAMC,SAAS,GAAG,CAACnB,QAAD,EAAWC,YAAX,EAAyBC,EAAzB,KAAgC,MAAOC,QAAP,IAAoB;AAC3E,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAY,GAAEV,IAAK,uBAAnB,EAA2CK,QAA3C,CAAlB,CADE,CAGF;;AACA,QAAII,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkB,MAAMJ,GAAG,CAACK,IAAlC;AACAjB,MAAAA,MAAM,CAACkB,GAAP,CAAW,UAAX,EAAuBH,KAAvB,EAA8B;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAA9B;AACAnB,MAAAA,MAAM,CAACkB,GAAP,CAAW,MAAX,EAAmBF,IAAnB,EAAyB;AAAEG,QAAAA,OAAO,EAAE;AAAX,OAAzB;AACAT,MAAAA,EAAE;AACH;AACF,GAVD,CAUE,OAAOU,GAAP,EAAY;AACZX,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,QAAIA,GAAG,CAACG,QAAJ,CAAaN,IAAb,CAAkBO,KAAtB,EAA6B;AAC3B,aAAOzB,KAAK,CAACyB,KAAN,CAAYJ,GAAG,CAACG,QAAJ,CAAaN,IAAb,CAAkBO,KAA9B,CAAP;AACD;;AAED,QAAIJ,GAAG,CAACG,QAAJ,CAAaN,IAAb,CAAkBQ,OAAlB,CAA0B,CAA1B,EAA6BC,OAAjC,EAA0C;AACxC,aAAO3B,KAAK,CAACyB,KAAN,CAAYJ,GAAG,CAACG,QAAJ,CAAaN,IAAb,CAAkBQ,OAAlB,CAA0B,CAA1B,EAA6BC,OAAzC,CAAP;AACD;AACF;AACF,CAtBM;AAwBP,OAAO,MAAME,MAAM,GAAG,MAAM;AAC1B5B,EAAAA,MAAM,CAAC6B,MAAP,CAAc,UAAd;AACAC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD,CAHM;AAKP,OAAO,MAAMC,eAAe,GAAIhB,IAAD,IAAU;AACvC,MAAI;AACF,QAAIiB,aAAa,GAAGjC,QAAQ,CAACkC,GAAT,CAAaC,OAAb,CAClBC,IAAI,CAACC,SAAL,CAAerB,IAAf,CADkB,EAElBb,OAAO,CAACC,GAAR,CAAYkC,QAFM,EAGlBC,QAHkB,EAApB;AAKAC,IAAAA,YAAY,CAACC,OAAb,CAAqBtC,OAAO,CAACC,GAAR,CAAYsC,WAAjC,EAA8CT,aAA9C;AACA,WAAO,IAAP;AACD,GARD,CAQE,OAAOV,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAiB,IAAAA,YAAY,CAACG,UAAb,CAAwBxC,OAAO,CAACC,GAAR,CAAYsC,WAApC;AACA,WAAO,KAAP;AACD;AACF,CAdM;AAgBP,OAAO,MAAME,eAAe,GAAG,MAAM;AACnC,MAAI;AACF,QAAIC,QAAQ,GAAGL,YAAY,CAACM,OAAb,CAAqB3C,OAAO,CAACC,GAAR,CAAYsC,WAAjC,IACXF,YAAY,CAACM,OAAb,CAAqB3C,OAAO,CAACC,GAAR,CAAYsC,WAAjC,CADW,GAEX,IAFJ;;AAGA,QAAIG,QAAJ,EAAc;AACZ,UAAIE,KAAK,GAAG/C,QAAQ,CAACkC,GAAT,CAAac,OAAb,CAAqBH,QAArB,EAA+B1C,OAAO,CAACC,GAAR,CAAYkC,QAA3C,CAAZ;AACA,UAAIW,WAAW,GAAGb,IAAI,CAACc,KAAL,CAAWH,KAAK,CAACR,QAAN,CAAevC,QAAQ,CAACmD,GAAT,CAAaC,IAA5B,CAAX,CAAlB;AACA,aAAOH,WAAP;AACD,KAJD,MAIO;AACL,aAAO,KAAP;AACD;AACF,GAXD,CAWE,OAAO1B,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AAEAiB,IAAAA,YAAY,CAACG,UAAb,CAAwBxC,OAAO,CAACC,GAAR,CAAYsC,WAApC;AACA,WAAO,KAAP;AACD;AACF,CAlBM","sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport cookie from \"js-cookie\";\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nlet host = process.env.API_URL;\r\n\r\nexport const userRegister =\r\n  (userData, setIsLoading, cb) => async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(`${host}/api/user/auth/signUp`, userData);\r\n\r\n      // // save the new token from our fucking api to the cookies\r\n      if (res.status === 200) {\r\n        const { token, user } = await res.data;\r\n        cookie.set(\"_wus_BJK\", token, { expires: 7 });\r\n        cookie.set(\"user\", user, { expires: 7 });\r\n        cb();\r\n      }\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      console.log(err);\r\n      if (err.response.data.error) {\r\n        return toast.error(err.response.data.error);\r\n      }\r\n\r\n      if (err.response.data.details[0].message) {\r\n        return toast.error(err.response.data.details[0].message);\r\n      }\r\n    }\r\n  };\r\n\r\nexport const userLogin = (userData, setIsLoading, cb) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`${host}/api/user/auth/signIn`, userData);\r\n\r\n    // // save the new token from our fucking api to the cookies\r\n    if (res.status === 200) {\r\n      const { token, user } = await res.data;\r\n      cookie.set(\"_wus_BJK\", token, { expires: 7 });\r\n      cookie.set(\"user\", user, { expires: 7 });\r\n      cb();\r\n    }\r\n  } catch (err) {\r\n    setIsLoading(false);\r\n    console.log(err);\r\n    if (err.response.data.error) {\r\n      return toast.error(err.response.data.error);\r\n    }\r\n\r\n    if (err.response.data.details[0].message) {\r\n      return toast.error(err.response.data.details[0].message);\r\n    }\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n  cookie.remove(\"_wus_BJK\");\r\n  window.location.href = \"/\";\r\n};\r\n\r\nexport const encryptUserData = (data) => {\r\n  try {\r\n    let encryptedData = CryptoJS.AES.encrypt(\r\n      JSON.stringify(data),\r\n      process.env.USER_KEY\r\n    ).toString();\r\n\r\n    localStorage.setItem(process.env.USER_COOKIE, encryptedData);\r\n    return true;\r\n  } catch (error) {\r\n    console.log(error);\r\n    localStorage.removeItem(process.env.USER_COOKIE);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const decryptUserData = () => {\r\n  try {\r\n    let infoItem = localStorage.getItem(process.env.USER_COOKIE)\r\n      ? localStorage.getItem(process.env.USER_COOKIE)\r\n      : null;\r\n    if (infoItem) {\r\n      let bytes = CryptoJS.AES.decrypt(infoItem, process.env.USER_KEY);\r\n      let stringArray = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n      return stringArray;\r\n    } else {\r\n      return false;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n\r\n    localStorage.removeItem(process.env.USER_COOKIE);\r\n    return false;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}