{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport Router from \"next/router\";\nimport { decryptInfoData, encryptInfoData } from \"../../store/actions/infoActions\";\n\nfunction useForm(stateSchema, validationSchema = {}, callback, handleStateChange) {\n  const {\n    0: state,\n    1: setState\n  } = useState(stateSchema);\n  const {\n    0: disable,\n    1: setDisable\n  } = useState(true);\n  const {\n    0: isDirty,\n    1: setIsDirty\n  } = useState(false);\n  useEffect(() => {\n    let decryptedData = decryptInfoData();\n\n    if (decryptedData) {\n      if (!decryptedData.delivery_date.value || !decryptedData.delivery_time.value) {\n        alert(\"Please input delivery date and time\");\n        window.location.href = \"/cart\";\n      } else {\n        setState(decryptedData);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    setDisable(true);\n  }, []);\n  useEffect(() => {\n    if (isDirty) {\n      setDisable(validateState());\n    }\n  }, [state, isDirty]); // Used to disable submit button if there's an error in state\n  // or the required field in state has no value.\n  // Wrapped in useCallback to cached the function to avoid instensive memory leaked\n  // in every re-render in component\n\n  const validateState = useCallback(() => {\n    const hasErrorInState = Object.keys(validationSchema).some(key => {\n      const isInputFieldRequired = validationSchema[key].required; // Get state value\n\n      const stateValue = state[key].value;\n      const stateError = state[key].error;\n      return isInputFieldRequired && !stateValue || stateError;\n    });\n    return hasErrorInState;\n  }, [state, validationSchema]);\n\n  function handleOnChange(event) {\n    setIsDirty(true);\n    const name = event.target.name;\n    const value = event.target.value;\n    let error = \"\";\n\n    if (validationSchema[name].required) {\n      if (!value) {\n        error = \"This is required field.\";\n      }\n    }\n\n    if (validationSchema[name].validator !== null && typeof validationSchema[name].validator === \"object\") {\n      if (validationSchema[name].validator.regEx) {\n        if (value && !validationSchema[name].validator.regEx.test(value)) {\n          error = validationSchema[name].validator.error;\n        }\n      }\n    }\n\n    setState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      [name]: {\n        value,\n        error\n      }\n    })); // handleStateChange(event);\n  }\n\n  function handleOnSubmit(event) {\n    event.preventDefault(); // Making sure that validateState returns false\n    // Before calling the submit callback function\n\n    if (!validateState()) {// callback();\n    }\n  }\n\n  return {\n    state,\n    disable,\n    handleOnChange,\n    handleOnSubmit\n  };\n}\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/corde/Desktop/New folder/Gabszy Flower/gabszy-flower-frontend/components/checkout/userForm.js"],"names":["useState","useEffect","useCallback","Router","decryptInfoData","encryptInfoData","useForm","stateSchema","validationSchema","callback","handleStateChange","state","setState","disable","setDisable","isDirty","setIsDirty","decryptedData","delivery_date","value","delivery_time","alert","window","location","href","validateState","hasErrorInState","Object","keys","some","key","isInputFieldRequired","required","stateValue","stateError","error","handleOnChange","event","name","target","validator","regEx","test","prevState","handleOnSubmit","preventDefault"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport Router from \"next/router\";\r\nimport {\r\n  decryptInfoData,\r\n  encryptInfoData,\r\n} from \"../../store/actions/infoActions\";\r\n\r\nfunction useForm(\r\n  stateSchema,\r\n  validationSchema = {},\r\n  callback,\r\n  handleStateChange\r\n) {\r\n  const [state, setState] = useState(stateSchema);\r\n  const [disable, setDisable] = useState(true);\r\n  const [isDirty, setIsDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let decryptedData = decryptInfoData();\r\n    if (decryptedData) {\r\n      if (\r\n        !decryptedData.delivery_date.value ||\r\n        !decryptedData.delivery_time.value\r\n      ) {\r\n        alert(\"Please input delivery date and time\");\r\n        window.location.href = \"/cart\";\r\n      } else {\r\n        setState(decryptedData);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setDisable(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isDirty) {\r\n      setDisable(validateState());\r\n    }\r\n  }, [state, isDirty]);\r\n\r\n  // Used to disable submit button if there's an error in state\r\n  // or the required field in state has no value.\r\n  // Wrapped in useCallback to cached the function to avoid instensive memory leaked\r\n  // in every re-render in component\r\n  const validateState = useCallback(() => {\r\n    const hasErrorInState = Object.keys(validationSchema).some((key) => {\r\n      const isInputFieldRequired = validationSchema[key].required;\r\n      // Get state value\r\n      const stateValue = state[key].value;\r\n      const stateError = state[key].error;\r\n\r\n      return (isInputFieldRequired && !stateValue) || stateError;\r\n    });\r\n\r\n    return hasErrorInState;\r\n  }, [state, validationSchema]);\r\n\r\n  function handleOnChange(event) {\r\n    setIsDirty(true);\r\n\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    let error = \"\";\r\n    if (validationSchema[name].required) {\r\n      if (!value) {\r\n        error = \"This is required field.\";\r\n      }\r\n    }\r\n\r\n    if (\r\n      validationSchema[name].validator !== null &&\r\n      typeof validationSchema[name].validator === \"object\"\r\n    ) {\r\n      if (validationSchema[name].validator.regEx) {\r\n        if (value && !validationSchema[name].validator.regEx.test(value)) {\r\n          error = validationSchema[name].validator.error;\r\n        }\r\n      }\r\n    }\r\n\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: { value, error },\r\n    }));\r\n\r\n    // handleStateChange(event);\r\n  }\r\n\r\n  function handleOnSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    // Making sure that validateState returns false\r\n    // Before calling the submit callback function\r\n    if (!validateState()) {\r\n      // callback();\r\n    }\r\n  }\r\n\r\n  return { state, disable, handleOnChange, handleOnSubmit };\r\n}\r\n\r\nexport default useForm;\r\n"]},"metadata":{},"sourceType":"module"}