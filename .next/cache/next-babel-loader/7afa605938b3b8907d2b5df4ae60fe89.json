{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corde\\\\Desktop\\\\New folder\\\\Gabszy Flower\\\\gabszy-flower-frontend\\\\components\\\\payments\\\\Payment.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { connect } from \"react-redux\";\nimport { ToastContainer, toast, Zoom } from \"react-toastify\";\nimport { resetCart } from \"../../store/actions/cartActions\";\n\nclass Payments extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleClick\", () => {\n      if (this.props.isValid()) {\n        // this.props.resetCart();\n        // toast.success(\"Order has been confirmed\", {\n        //   position: \"top-center\",\n        //   autoClose: 3000,\n        //   hideProgressBar: false,\n        //   closeOnClick: true,\n        //   pauseOnHover: true,\n        //   draggable: true,\n        // });\n        // setTimeout(function () {\n        //   Router.push(\"/thankyou\");\n        // }, 3000);\n        this.props.handleSubmit();\n      }\n    });\n  }\n\n  render() {\n    let {\n      amount\n    } = this.props;\n\n    const onToken = async token => {\n      const body = {\n        amount: amount,\n        token: token\n      };\n      await axios.post(\"/api/stripe/checkout\", body);\n    };\n\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, __jsx(ToastContainer, {\n      transition: Zoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"order-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Place Order\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetCart: () => {\n      dispatch(resetCart());\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Payments);","map":{"version":3,"sources":["C:/Users/corde/Desktop/New folder/Gabszy Flower/gabszy-flower-frontend/components/payments/Payment.js"],"names":["React","axios","Router","StripeCheckout","connect","ToastContainer","toast","Zoom","resetCart","Payments","Component","props","isValid","handleSubmit","render","amount","onToken","token","body","post","handleClick","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,KAAzB,EAAgCC,IAAhC,QAA4C,gBAA5C;AACA,SAASC,SAAT,QAA0B,iCAA1B;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AAAA;AAAA;;AAAA,yCACvB,MAAM;AAClB,UAAI,KAAKC,KAAL,CAAWC,OAAX,EAAJ,EAA0B;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,aAAKD,KAAL,CAAWE,YAAX;AACD;AACF,KAnBoC;AAAA;;AAoBrCC,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEC,MAAAA;AAAF,QAAa,KAAKJ,KAAtB;;AACA,UAAMK,OAAO,GAAG,MAAOC,KAAP,IAAiB;AAC/B,YAAMC,IAAI,GAAG;AACXH,QAAAA,MAAM,EAAEA,MADG;AAEXE,QAAAA,KAAK,EAAEA;AAFI,OAAb;AAIA,YAAMhB,KAAK,CAACkB,IAAN,CAAW,sBAAX,EAAmCD,IAAnC,CAAN;AACD,KAND;;AAQA,WACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,cAAD;AAAgB,MAAA,UAAU,EAAEX,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAkBE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKa,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAlBF,CAHF,CADF;AA4BD;;AA1DoC;;AA6DvC,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLd,IAAAA,SAAS,EAAE,MAAM;AACfc,MAAAA,QAAQ,CAACd,SAAS,EAAV,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeJ,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCZ,QAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Router from \"next/router\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport { connect } from \"react-redux\";\r\nimport { ToastContainer, toast, Zoom } from \"react-toastify\";\r\nimport { resetCart } from \"../../store/actions/cartActions\";\r\n\r\nclass Payments extends React.Component {\r\n  handleClick = () => {\r\n    if (this.props.isValid()) {\r\n      // this.props.resetCart();\r\n      // toast.success(\"Order has been confirmed\", {\r\n      //   position: \"top-center\",\r\n      //   autoClose: 3000,\r\n      //   hideProgressBar: false,\r\n      //   closeOnClick: true,\r\n      //   pauseOnHover: true,\r\n      //   draggable: true,\r\n      // });\r\n\r\n      // setTimeout(function () {\r\n      //   Router.push(\"/thankyou\");\r\n      // }, 3000);\r\n\r\n      this.props.handleSubmit();\r\n    }\r\n  };\r\n  render() {\r\n    let { amount } = this.props;\r\n    const onToken = async (token) => {\r\n      const body = {\r\n        amount: amount,\r\n        token: token,\r\n      };\r\n      await axios.post(\"/api/stripe/checkout\", body);\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <ToastContainer transition={Zoom} />\r\n\r\n        <div className=\"order-btn\">\r\n          {/* <StripeCheckout\r\n            name=\"We - Order\"\r\n            description=\"React Next eCommerce Templates\"\r\n            amount={amount}\r\n            currency=\"USD\"\r\n            token={onToken}\r\n            stripeKey=\"pk_test_ZaZZWZGlvdIn12yFleIqyjSI00G4e18Kf7\"\r\n            billingAddress={false}\r\n            closed={this.handleClick}\r\n          >\r\n            <button disabled={this.props.disabled} className={`btn btn-primary ${this.props.disabled ? 'btn-disabled' : ''}`} >\r\n                            Place Order\r\n                        </button>\r\n\r\n           \r\n          </StripeCheckout> */}\r\n\r\n          <button className=\"btn btn-primary\" onClick={this.handleClick}>\r\n            Place Order\r\n          </button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    resetCart: () => {\r\n      dispatch(resetCart());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Payments);\r\n"]},"metadata":{},"sourceType":"module"}