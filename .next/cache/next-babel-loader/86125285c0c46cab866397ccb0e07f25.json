{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corde\\\\Desktop\\\\New folder\\\\bikeshop\\\\bikeshop_frontend\\\\components\\\\payments\\\\Gcash.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\n\nconst GCash = ({\n  amount,\n  description\n}) => {\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [payProcess, setPayProcess] = useState(\"\");\n  const [paymentStatus, setPaymentStatus] = useState(\"\");\n  const publicKey = process.env.NEXT_PUBLIC_PAYMONGO_PUBLIC; // Function to Create A Source\n\n  const createSource = async () => {\n    setPaymentStatus(\"Creating Source\");\n    const options = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Basic ${Buffer.from(publicKey).toString(\"base64\")}`\n      },\n      body: JSON.stringify({\n        data: {\n          attributes: {\n            amount: amount * 100,\n            redirect: {\n              success: \"http://localhost:3000/payment\",\n              failed: \"http://localhost:3000/payment\"\n            },\n            billing: {\n              name: `${name}`,\n              phone: `${phone}`,\n              email: `${email}`\n            },\n            type: \"gcash\",\n            currency: \"PHP\"\n          }\n        }\n      })\n    };\n    return fetch(\"https://api.paymongo.com/v1/sources\", options).then(response => response.json()).then(response => {\n      return response;\n    }).catch(err => console.error(err));\n  }; // Function to Listen to the Source in the Front End\n\n\n  const listenToPayment = async sourceId => {\n    let i = 5;\n\n    for (let i = 5; i > 0; i--) {\n      setPaymentStatus(`Listening to Payment in ${i}`);\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      if (i == 1) {\n        const sourceData = await fetch(\"https://api.paymongo.com/v1/sources/\" + sourceId, {\n          headers: {\n            // Base64 encoded public PayMongo API key.\n            Authorization: `Basic ${Buffer.from(publicKey).toString(\"base64\")}`\n          }\n        }).then(response => {\n          return response.json();\n        }).then(response => {\n          console.log(response.data);\n          return response.data;\n        });\n\n        if (sourceData.attributes.status === \"failed\") {\n          setPaymentStatus(\"Payment Failed\");\n        } else if (sourceData.attributes.status === \"paid\") {\n          setPaymentStatus(\"Payment Success\");\n        } else {\n          i = 5;\n          setPayProcess(sourceData.attributes.status);\n        }\n      }\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    const source = await createSource();\n    window.open(source.data.attributes.redirect.checkout_url, \"_blank\");\n    listenToPayment(source.data.id);\n  };\n\n  return __jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    action: \"#\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Billing Information\"), __jsx(\"div\", {\n    id: \"form-card\",\n    className: \"formField\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"customer-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Customer Name:\"), __jsx(\"input\", {\n    id: \"customer-name\",\n    placeholder: \"Juan Dela Cruz\",\n    className: \"input\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    id: \"form-card\",\n    className: \"formField\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Phone Number:\"), __jsx(\"input\", {\n    id: \"phone\",\n    placeholder: \"09xxxxxxxxx\",\n    className: \"input\",\n    value: phone,\n    onChange: e => setPhone(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    id: \"form-card\",\n    className: \"formField\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"email:\"), __jsx(\"input\", {\n    id: \"email\",\n    placeholder: \"user@domain.com\",\n    className: \"input\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"payButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"Pay\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, paymentStatus), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, payProcess)));\n};\n\nexport default GCash;","map":{"version":3,"sources":["C:/Users/corde/Desktop/New folder/bikeshop/bikeshop_frontend/components/payments/Gcash.js"],"names":["React","GCash","amount","description","name","setName","useState","phone","setPhone","email","setEmail","payProcess","setPayProcess","paymentStatus","setPaymentStatus","publicKey","process","env","NEXT_PUBLIC_PAYMONGO_PUBLIC","createSource","options","method","headers","Accept","Authorization","Buffer","from","toString","body","JSON","stringify","data","attributes","redirect","success","failed","billing","type","currency","fetch","then","response","json","catch","err","console","error","listenToPayment","sourceId","i","Promise","resolve","setTimeout","sourceData","log","status","onSubmit","event","preventDefault","source","window","open","checkout_url","id","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nconst GCash = ({ amount, description }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const [payProcess, setPayProcess] = useState(\"\");\r\n  const [paymentStatus, setPaymentStatus] = useState(\"\");\r\n\r\n  const publicKey = process.env.NEXT_PUBLIC_PAYMONGO_PUBLIC;\r\n\r\n  // Function to Create A Source\r\n  const createSource = async () => {\r\n    setPaymentStatus(\"Creating Source\");\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Basic ${Buffer.from(publicKey).toString(\"base64\")}`,\r\n      },\r\n      body: JSON.stringify({\r\n        data: {\r\n          attributes: {\r\n            amount: amount * 100,\r\n            redirect: {\r\n              success: \"http://localhost:3000/payment\",\r\n              failed: \"http://localhost:3000/payment\",\r\n            },\r\n            billing: { name: `${name}`, phone: `${phone}`, email: `${email}` },\r\n            type: \"gcash\",\r\n            currency: \"PHP\",\r\n          },\r\n        },\r\n      }),\r\n    };\r\n    return fetch(\"https://api.paymongo.com/v1/sources\", options)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  // Function to Listen to the Source in the Front End\r\n  const listenToPayment = async (sourceId) => {\r\n    let i = 5;\r\n    for (let i = 5; i > 0; i--) {\r\n      setPaymentStatus(`Listening to Payment in ${i}`);\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n      if (i == 1) {\r\n        const sourceData = await fetch(\r\n          \"https://api.paymongo.com/v1/sources/\" + sourceId,\r\n          {\r\n            headers: {\r\n              // Base64 encoded public PayMongo API key.\r\n              Authorization: `Basic ${Buffer.from(publicKey).toString(\r\n                \"base64\"\r\n              )}`,\r\n            },\r\n          }\r\n        )\r\n          .then((response) => {\r\n            return response.json();\r\n          })\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            return response.data;\r\n          });\r\n\r\n        if (sourceData.attributes.status === \"failed\") {\r\n          setPaymentStatus(\"Payment Failed\");\r\n        } else if (sourceData.attributes.status === \"paid\") {\r\n          setPaymentStatus(\"Payment Success\");\r\n        } else {\r\n          i = 5;\r\n          setPayProcess(sourceData.attributes.status);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const source = await createSource();\r\n    window.open(source.data.attributes.redirect.checkout_url, \"_blank\");\r\n    listenToPayment(source.data.id);\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <form action=\"#\" onSubmit={onSubmit}>\r\n        <h2>Billing Information</h2>\r\n        <div id=\"form-card\" className={\"formField\"}>\r\n          <label htmlFor=\"customer-name\">Customer Name:</label>\r\n          <input\r\n            id=\"customer-name\"\r\n            placeholder=\"Juan Dela Cruz\"\r\n            className={\"input\"}\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div id=\"form-card\" className={\"formField\"}>\r\n          <label htmlFor=\"phone\">Phone Number:</label>\r\n          <input\r\n            id=\"phone\"\r\n            placeholder=\"09xxxxxxxxx\"\r\n            className={\"input\"}\r\n            value={phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div id=\"form-card\" className={\"formField\"}>\r\n          <label htmlFor=\"email\">email:</label>\r\n          <input\r\n            id=\"email\"\r\n            placeholder=\"user@domain.com\"\r\n            className={\"input\"}\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className={\"payButton\"}>\r\n          Pay\r\n        </button>\r\n        <p>{paymentStatus}</p>\r\n        <p>{payProcess}</p>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default GCash;\r\n"]},"metadata":{},"sourceType":"module"}