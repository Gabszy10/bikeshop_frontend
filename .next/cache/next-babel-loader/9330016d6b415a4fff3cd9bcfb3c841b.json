{"ast":null,"code":"const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nexport const debounce = (func, wait, immediate) => {\n  var timeout;\n  return function () {\n    var context = this,\n        args = arguments;\n\n    var later = function () {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\nexport const formatNumber = num => {\n  return num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n};\nexport const isDateBeforeToday = date => {\n  return new Date(new Date(date).toDateString()) < new Date(new Date().toDateString());\n};\nexport const formatDate = date => {\n  let month = monthNames[new Date(date).getMonth()];\n  let day = new Date(date).getDate();\n  let year = new Date(date).getFullYear();\n  return `${month} ${day}, ${year}`;\n};","map":{"version":3,"sources":["C:/Users/corde/Desktop/New folder/Gabszy Flower/gabszy-flower-frontend/helpers/function.js"],"names":["monthNames","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","formatNumber","num","toFixed","replace","isDateBeforeToday","date","Date","toDateString","formatDate","month","getMonth","day","getDate","year","getFullYear"],"mappings":"AAAA,MAAMA,UAAU,GAAG,CACjB,SADiB,EAEjB,UAFiB,EAGjB,OAHiB,EAIjB,OAJiB,EAKjB,KALiB,EAMjB,MANiB,EAOjB,MAPiB,EAQjB,QARiB,EASjB,WATiB,EAUjB,SAViB,EAWjB,UAXiB,EAYjB,UAZiB,CAAnB;AAeA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,SAAb,KAA2B;AACjD,MAAIC,OAAJ;AACA,SAAO,YAAY;AACjB,QAAIC,OAAO,GAAG,IAAd;AAAA,QACEC,IAAI,GAAGC,SADT;;AAEA,QAAIC,KAAK,GAAG,YAAY;AACtBJ,MAAAA,OAAO,GAAG,IAAV;AACA,UAAI,CAACD,SAAL,EAAgBF,IAAI,CAACQ,KAAL,CAAWJ,OAAX,EAAoBC,IAApB;AACjB,KAHD;;AAIA,QAAII,OAAO,GAAGP,SAAS,IAAI,CAACC,OAA5B;AACAO,IAAAA,YAAY,CAACP,OAAD,CAAZ;AACAA,IAAAA,OAAO,GAAGQ,UAAU,CAACJ,KAAD,EAAQN,IAAR,CAApB;AACA,QAAIQ,OAAJ,EAAaT,IAAI,CAACQ,KAAL,CAAWJ,OAAX,EAAoBC,IAApB;AACd,GAXD;AAYD,CAdM;AAgBP,OAAO,MAAMO,YAAY,GAAIC,GAAD,IAAS;AACnC,SAAOA,GAAG,CAACC,OAAJ,CAAY,CAAZ,EAAeC,OAAf,CAAuB,yBAAvB,EAAkD,KAAlD,CAAP;AACD,CAFM;AAIP,OAAO,MAAMC,iBAAiB,GAAIC,IAAD,IAAU;AACzC,SACE,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,CAASD,IAAT,EAAeE,YAAf,EAAT,IACA,IAAID,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,YAAX,EAAT,CAFF;AAID,CALM;AAOP,OAAO,MAAMC,UAAU,GAAIH,IAAD,IAAU;AAClC,MAAII,KAAK,GAAGvB,UAAU,CAAC,IAAIoB,IAAJ,CAASD,IAAT,EAAeK,QAAf,EAAD,CAAtB;AACA,MAAIC,GAAG,GAAG,IAAIL,IAAJ,CAASD,IAAT,EAAeO,OAAf,EAAV;AACA,MAAIC,IAAI,GAAG,IAAIP,IAAJ,CAASD,IAAT,EAAeS,WAAf,EAAX;AAEA,SAAQ,GAAEL,KAAM,IAAGE,GAAI,KAAIE,IAAK,EAAhC;AACD,CANM","sourcesContent":["const monthNames = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nexport const debounce = (func, wait, immediate) => {\r\n  var timeout;\r\n  return function () {\r\n    var context = this,\r\n      args = arguments;\r\n    var later = function () {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    };\r\n    var callNow = immediate && !timeout;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n    if (callNow) func.apply(context, args);\r\n  };\r\n};\r\n\r\nexport const formatNumber = (num) => {\r\n  return num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n};\r\n\r\nexport const isDateBeforeToday = (date) => {\r\n  return (\r\n    new Date(new Date(date).toDateString()) <\r\n    new Date(new Date().toDateString())\r\n  );\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n  let month = monthNames[new Date(date).getMonth()];\r\n  let day = new Date(date).getDate();\r\n  let year = new Date(date).getFullYear();\r\n\r\n  return `${month} ${day}, ${year}`;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}