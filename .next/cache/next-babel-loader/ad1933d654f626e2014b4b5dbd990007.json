{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { userLogin } from \"../../store/actions/userActions\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport Router from \"next/router\";\nimport Link from \"next/link\";\nimport cookie from \"js-cookie\";\n\nfunction Login(props) {\n  useEffect(() => {\n    let token = cookie.get(\"_wus_BJK\");\n    console.log(token);\n\n    if (token) {\n      window.location.href = \"/\";\n    }\n  }, []);\n  const {\n    0: userData,\n    1: setUserData\n  } = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const isValid = () => {\n    if (!userData.email || !userData.password) {\n      toast.error(\"Please input all fields\");\n      return false;\n    }\n\n    if (userData.password.length < 6) {\n      toast.error(\"Password must be at least 6 characters\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = async () => {\n    setIsLoading(true);\n\n    if (isValid()) {\n      console.log(userData);\n      await props.userLogin(userData, setIsLoading, () => {\n        Router.push(\"/profile\");\n        setIsLoading(false);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  };\n\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  return __jsx(React.Fragment, null, __jsx(ToastContainer, {\n    transition: Slide\n  }), __jsx(\"section\", {\n    className: \"login-area ptb-60\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-6 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"login-content\"\n  }, __jsx(\"div\", {\n    className: \"section-title\"\n  }, __jsx(\"h2\", null, __jsx(\"span\", {\n    className: \"dot\"\n  }), \" Login\")), __jsx(\"form\", {\n    className: \"login-form\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Email\"), __jsx(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    placeholder: \"Enter your name\",\n    id: \"name\",\n    name: \"email\",\n    onChange: handleChange\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Password\"), __jsx(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    placeholder: \"Enter your password\",\n    id: \"password\",\n    name: \"password\",\n    onChange: handleChange\n  })), __jsx(\"button\", {\n    type: \"button\",\n    onClick: handleSubmit,\n    className: \"btn btn-primary\"\n  }, \"Login\")))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"new-customer-content\"\n  }, __jsx(\"div\", {\n    className: \"section-title\"\n  }, __jsx(\"h2\", null, __jsx(\"span\", {\n    className: \"dot\"\n  }), \" New Customer\")), __jsx(\"span\", null, \"Create a Account\"), __jsx(\"p\", null, \"Sign up for a free account at our store. Registration is quick and easy. It allows you to be able to see and track your orders.\"), __jsx(Link, {\n    href: \"/signup\"\n  }, __jsx(\"a\", {\n    className: \"btn btn-light\"\n  }, \"Create A Account\"))))))));\n}\n\nexport default connect(null, {\n  userLogin\n})(Login);","map":null,"metadata":{},"sourceType":"module"}