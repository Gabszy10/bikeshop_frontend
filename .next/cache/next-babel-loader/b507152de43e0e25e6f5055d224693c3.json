{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport LazyLoad from \"react-lazyload\";\nimport { connect } from \"react-redux\";\nimport { addToCart, addToCompare } from \"../../store/actions/cartActions\";\nimport Link from \"next/link\";\nimport ReactTooltip from \"react-tooltip\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport QuickView from \"../Modal/QuickView\";\nimport axios from \"axios\";\nimport { formatNumber } from \"../../helpers/function\";\n\nfunction Products(props) {\n  const {\n    0: state,\n    1: setstate\n  } = useState({\n    modalOpen: false,\n    modalImage: \"\",\n    price: 0,\n    idd: null\n  });\n  const {\n    0: collections,\n    1: setcollections\n  } = useState([]);\n  let host = process.env.API_URL;\n  let {\n    products\n  } = props;\n  const {\n    modalOpen\n  } = state;\n\n  const fetchCollection = async () => {\n    try {\n      const res = await axios.get(`${host}/api/user/collection`);\n\n      if (res.data) {\n        setcollections(res.data.collections);\n      }\n    } catch (err) {\n      if (err.response.data) {\n        return toast.error(err.response.data.msg);\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchCollection();\n  }, []);\n\n  const openTabSection = (evt, tabNmae) => {\n    let i, tabcontent, tablinks;\n    tabcontent = document.getElementsByClassName(\"tabs_item\");\n\n    for (i = 0; i < tabcontent.length; i++) {\n      tabcontent[i].classList.remove(\"fadeInUp\");\n      tabcontent[i].style.display = \"none\";\n    }\n\n    tablinks = document.getElementsByTagName(\"li\");\n\n    for (i = 0; i < tablinks.length; i++) {\n      tablinks[i].className = tablinks[i].className.replace(\"current\", \"\");\n    }\n\n    document.getElementById(tabNmae).style.display = \"block\";\n    document.getElementById(tabNmae).className += \" fadeInUp animated\";\n    evt.currentTarget.className += \"current\";\n  };\n\n  const handleAddToCart = product => {\n    props.addToCart(product);\n    toast.success(\"Added to the cart\", {\n      position: \"bottom-left\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true\n    });\n  };\n\n  const handleAddToCompare = id => {\n    props.addToCompare(id);\n    toast.success(\"Added to the compare\", {\n      position: \"bottom-left\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true\n    });\n  };\n\n  const compareButton = id => {\n    let compare_exist = props.CompareProducts.filter(item => item.id === id);\n\n    if (compare_exist.length > 0) {\n      return __jsx(Link, {\n        href: \"#\"\n      }, __jsx(\"a\", {\n        \"data-tip\": \"Already Added\",\n        \"data-place\": \"left\",\n        onClick: e => {\n          e.preventDefault();\n        },\n        disabled: true,\n        className: \"disabled\"\n      }, __jsx(\"i\", {\n        className: \"fas fa-sync\"\n      })));\n    } else {\n      return __jsx(Link, {\n        href: \"#\"\n      }, __jsx(\"a\", {\n        \"data-tip\": \"Add to Compare\",\n        \"data-place\": \"left\",\n        onClick: e => {\n          e.preventDefault();\n          handleAddToCompare(id);\n        }\n      }, __jsx(\"i\", {\n        className: \"fas fa-sync\"\n      })));\n    }\n  };\n\n  const openModal = () => {\n    setstate(_objectSpread(_objectSpread({}, state), {}, {\n      modalOpen: true\n    }));\n  };\n\n  const closeModal = () => {\n    setstate(_objectSpread(_objectSpread({}, state), {}, {\n      modalOpen: false\n    }));\n  };\n\n  const handleModalData = (image, price, id) => {\n    setstate(_objectSpread(_objectSpread({}, state), {}, {\n      modalImage: image,\n      price: price,\n      idd: id\n    }));\n  };\n\n  return __jsx(\"section\", {\n    className: \"all-products-area pb-60\"\n  }, __jsx(ReactTooltip, null), __jsx(ToastContainer, {\n    transition: Slide\n  }), __jsx(\"div\", {\n    className: \"container\"\n  }, collections.length ? collections.map((collection, i) => __jsx(LazyLoad, {\n    height: 200,\n    offset: 100\n  }, __jsx(\"div\", {\n    key: i,\n    className: \"tab products-category-tab\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  }, __jsx(\"ul\", {\n    className: \"tabs\"\n  }, __jsx(\"h2\", {\n    className: \"current\"\n  }, __jsx(\"span\", {\n    className: \"tabs-nav-text\"\n  }, __jsx(\"span\", {\n    className: \"dot\"\n  }), \" \", collection.title)))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"tab_content\"\n  }, __jsx(\"div\", {\n    id: \"tab1\",\n    className: \"tabs_item\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, collection.products.map((data, idx) => __jsx(\"div\", {\n    className: \"col-lg-3 col-sm-6 col-6\",\n    key: idx\n  }, __jsx(\"div\", {\n    className: \"single-product-box\"\n  }, __jsx(\"div\", {\n    className: \"product-image\"\n  }, __jsx(Link, {\n    href: `/product/${data.slug}`\n  }, __jsx(\"img\", {\n    style: {\n      cursor: \"pointer\"\n    },\n    src: `${host}/products/${data.product_images[0][\"file_name\"]}`,\n    alt: \"image\"\n  })), __jsx(\"ul\", null, __jsx(\"li\", null, compareButton(data.id)))), __jsx(\"div\", {\n    className: \"product-content\"\n  }, __jsx(\"h3\", null, __jsx(Link, {\n    href: `/product/${data.slug}`\n  }, __jsx(\"a\", null, data.name))), __jsx(\"div\", {\n    className: \"product-price\"\n  }, __jsx(\"span\", {\n    className: \"new-price slashed\"\n  }, \"\\u20B1\", formatNumber(data.regular_price))), __jsx(\"div\", {\n    className: \"product-price\"\n  }, __jsx(\"span\", {\n    className: \"new-price\"\n  }, \"\\u20B1\", formatNumber(data.discount_price))), data.campaign_price ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"product-price\"\n  }, __jsx(\"span\", {\n    className: \"new-price\",\n    style: {\n      fontSize: \"0.9rem\",\n      color: \"#ff5558\"\n    }\n  }, \"Valentine's Price:\")), __jsx(\"div\", {\n    className: \"product-price\"\n  }, __jsx(\"span\", {\n    className: \"new-price\",\n    style: {\n      fontSize: \"1rem\",\n      color: \"#ff5558\",\n      fontWeight: \"bold\"\n    }\n  }, \"\\u20B1\", formatNumber(data.campaign_price)))) : null, __jsx(\"div\", {\n    className: \"rating\"\n  }, __jsx(\"i\", {\n    className: \"fas fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fas fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fas fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fas fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fas fa-star\"\n  })), __jsx(Link, {\n    href: `/product/${data.slug}`\n  }, __jsx(\"a\", {\n    className: \"btn btn-light\",\n    onClick: e => {// e.preventDefault();\n      // handleAddToCart(data);\n    }\n  }, \"Add to Cart\")))))))))))))) : null), modalOpen ? __jsx(QuickView, {\n    closeModal: closeModal,\n    idd: state.idd,\n    image: state.modalImage,\n    price: state.price\n  }) : \"\");\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products,\n    CompareProducts: state.addedItemsToCompare\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: id => {\n      dispatch(addToCart(id));\n    },\n    addToCompare: id => {\n      dispatch(addToCompare(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);","map":null,"metadata":{},"sourceType":"module"}