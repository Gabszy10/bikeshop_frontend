{"ast":null,"code":"import { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY, ADD_QUANTITY_WITH_NUMBER, RESET_CART, ADD_TO_COMPARE, REMOVE_ITEM_FROM_COMPARE, ADD_TO_CART_ADDONS } from \"./action-types/cart-actions\";\n\nvar CryptoJS = require(\"crypto-js\");\n\nexport const clearData = () => {\n  localStorage.removeItem(process.env.CART_COOKIE);\n  localStorage.removeItem(process.env.INFO_COOKIE);\n};\nexport const encryptData = data => {\n  try {\n    return CryptoJS.AES.encrypt(JSON.stringify(data), process.env.CART_KEY).toString();\n  } catch (error) {\n    // console.log(error);\n    localStorage.removeItem(process.env.CART_COOKIE);\n    return [];\n  }\n};\nexport const decryptData = data => {\n  try {\n    let bytes = CryptoJS.AES.decrypt(data, process.env.CART_KEY);\n    let stringArray = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n    return JSON.parse(stringArray);\n  } catch (error) {\n    // console.log(error);\n    localStorage.removeItem(process.env.CART_COOKIE);\n    return [];\n  }\n}; //add cart action\n\nexport const addToCart = (product, quantity = 1) => {\n  return {\n    type: ADD_TO_CART,\n    product: product,\n    quantity\n  };\n}; //add cart with addons action\n\nexport const addToCartAddons = (products, quantity = 1) => {\n  return {\n    type: ADD_TO_CART_ADDONS,\n    products: products,\n    quantity\n  };\n}; //remove item action\n\nexport const removeItem = id => {\n  return {\n    type: REMOVE_ITEM,\n    id\n  };\n}; //subtract qt action\n\nexport const subtractQuantity = id => {\n  return {\n    type: SUB_QUANTITY,\n    id\n  };\n}; //add qt action\n\nexport const addQuantity = id => {\n  return {\n    type: ADD_QUANTITY,\n    id\n  };\n}; //add qt action with quantity number\n\nexport const addQuantityWithNumber = (id, qty) => {\n  return {\n    type: ADD_QUANTITY_WITH_NUMBER,\n    id,\n    qty\n  };\n}; // Reset cart after form submit\n\nexport const resetCart = () => {\n  return {\n    type: RESET_CART\n  };\n}; //add compare action\n\nexport const addToCompare = id => {\n  return {\n    type: ADD_TO_COMPARE,\n    id\n  };\n}; //remove item from compare action\n\nexport const removeItemFromCompare = id => {\n  return {\n    type: REMOVE_ITEM_FROM_COMPARE,\n    id\n  };\n};","map":{"version":3,"sources":["C:/Users/corde/Desktop/New folder/bikeshop/gabszy-flower-frontend/store/actions/cartActions.js"],"names":["ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","ADD_QUANTITY","ADD_QUANTITY_WITH_NUMBER","RESET_CART","ADD_TO_COMPARE","REMOVE_ITEM_FROM_COMPARE","ADD_TO_CART_ADDONS","CryptoJS","require","clearData","localStorage","removeItem","process","env","CART_COOKIE","INFO_COOKIE","encryptData","data","AES","encrypt","JSON","stringify","CART_KEY","toString","error","decryptData","bytes","decrypt","stringArray","parse","enc","Utf8","addToCart","product","quantity","type","addToCartAddons","products","id","subtractQuantity","addQuantity","addQuantityWithNumber","qty","resetCart","addToCompare","removeItemFromCompare"],"mappings":"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","sourcesContent":["import {\r\n  ADD_TO_CART,\r\n  REMOVE_ITEM,\r\n  SUB_QUANTITY,\r\n  ADD_QUANTITY,\r\n  ADD_QUANTITY_WITH_NUMBER,\r\n  RESET_CART,\r\n  ADD_TO_COMPARE,\r\n  REMOVE_ITEM_FROM_COMPARE,\r\n  ADD_TO_CART_ADDONS,\r\n} from \"./action-types/cart-actions\";\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nexport const clearData = () => {\r\n  localStorage.removeItem(process.env.CART_COOKIE);\r\n  localStorage.removeItem(process.env.INFO_COOKIE);\r\n};\r\n\r\nexport const encryptData = (data) => {\r\n  try {\r\n    return CryptoJS.AES.encrypt(\r\n      JSON.stringify(data),\r\n      process.env.CART_KEY\r\n    ).toString();\r\n  } catch (error) {\r\n    // console.log(error);\r\n    localStorage.removeItem(process.env.CART_COOKIE);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const decryptData = (data) => {\r\n  try {\r\n    let bytes = CryptoJS.AES.decrypt(data, process.env.CART_KEY);\r\n    let stringArray = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n    return JSON.parse(stringArray);\r\n  } catch (error) {\r\n    // console.log(error);\r\n\r\n    localStorage.removeItem(process.env.CART_COOKIE);\r\n    return [];\r\n  }\r\n};\r\n\r\n//add cart action\r\nexport const addToCart = (product, quantity = 1) => {\r\n  return {\r\n    type: ADD_TO_CART,\r\n    product: product,\r\n    quantity,\r\n  };\r\n};\r\n\r\n//add cart with addons action\r\nexport const addToCartAddons = (products, quantity = 1) => {\r\n  return {\r\n    type: ADD_TO_CART_ADDONS,\r\n    products: products,\r\n    quantity,\r\n  };\r\n};\r\n\r\n//remove item action\r\nexport const removeItem = (id) => {\r\n  return {\r\n    type: REMOVE_ITEM,\r\n    id,\r\n  };\r\n};\r\n//subtract qt action\r\nexport const subtractQuantity = (id) => {\r\n  return {\r\n    type: SUB_QUANTITY,\r\n    id,\r\n  };\r\n};\r\n//add qt action\r\nexport const addQuantity = (id) => {\r\n  return {\r\n    type: ADD_QUANTITY,\r\n    id,\r\n  };\r\n};\r\n\r\n//add qt action with quantity number\r\nexport const addQuantityWithNumber = (id, qty) => {\r\n  return {\r\n    type: ADD_QUANTITY_WITH_NUMBER,\r\n    id,\r\n    qty,\r\n  };\r\n};\r\n\r\n// Reset cart after form submit\r\nexport const resetCart = () => {\r\n  return {\r\n    type: RESET_CART,\r\n  };\r\n};\r\n\r\n//add compare action\r\nexport const addToCompare = (id) => {\r\n  return {\r\n    type: ADD_TO_COMPARE,\r\n    id,\r\n  };\r\n};\r\n//remove item from compare action\r\nexport const removeItemFromCompare = (id) => {\r\n  return {\r\n    type: REMOVE_ITEM_FROM_COMPARE,\r\n    id,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}