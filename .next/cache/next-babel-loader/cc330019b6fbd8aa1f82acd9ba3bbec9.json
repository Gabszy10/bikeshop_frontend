{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\";\nimport { addQuantityWithNumber, addToCartAddons } from \"../../store/actions/cartActions\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport SizeGuide from \"./SizeGuide\";\nimport Shipping from \"./Shipping\";\nimport AddonProducts from \"../shop-style-one/AddonProducts\";\nimport { formatNumber } from \"../../helpers/function\";\n\nfunction ProductContent(props) {\n  const {\n    0: state,\n    1: setstate\n  } = useState({\n    qty: 1,\n    max: 10,\n    min: 1,\n    sizeGuide: false,\n    shipModal: false\n  });\n  const {\n    0: addon,\n    1: setAddon\n  } = useState([]);\n\n  const handleAddToCartFromView = product => {\n    let new_items = addon;\n    new_items.push(product);\n    props.addToCartAddons(new_items, state.qty);\n    toast.success(\"Added to the cart\", {\n      position: \"bottom-left\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true\n    });\n    window.location.href = `/cart`;\n  };\n\n  const handleAddonCheck = (e, product) => {\n    let newAddon = addon;\n\n    if (e.target.checked) {\n      newAddon.push(product);\n      setAddon(newAddon);\n    } else {\n      let new_items = addon.filter(item => product.id !== item.id);\n      setAddon(new_items);\n    }\n\n    console.log(addon, newAddon);\n  };\n\n  const IncrementItem = () => {\n    setstate(prevState => {\n      if (prevState.qty < 1000) {\n        return {\n          qty: prevState.qty + 1\n        };\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const DecreaseItem = () => {\n    setstate(prevState => {\n      if (prevState.qty > 1) {\n        return {\n          qty: prevState.qty - 1\n        };\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const openSizeGuide = () => {\n    setstate(_objectSpread(_objectSpread({}, state), {}, {\n      sizeGuide: true\n    }));\n  };\n\n  const closeSizeGuide = () => {\n    setstate(_objectSpread(_objectSpread({}, state), {}, {\n      sizeGuide: false\n    }));\n  };\n\n  const openShipModal = () => {\n    setstate(_objectSpread(_objectSpread({}, state), {}, {\n      shipModal: true\n    }));\n  };\n\n  const closeShipModal = () => {\n    setstate(_objectSpread(_objectSpread({}, state), {}, {\n      shipModal: false\n    }));\n  };\n\n  const {\n    sizeGuide,\n    shipModal\n  } = state;\n  let {\n    product\n  } = props;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(ToastContainer, null), __jsx(\"div\", {\n    className: \"product-details-content\",\n    style: product.product_images.length <= 1 ? {\n      marginBottom: \"100px\"\n    } : null\n  }, __jsx(\"h3\", null, product.name), __jsx(\"div\", {\n    className: \"price\"\n  }, __jsx(\"span\", {\n    className: \"new-price\"\n  }, \"\\u20B1\", formatNumber(product.discount_price))), product.campaign_price ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"price\"\n  }, __jsx(\"span\", {\n    className: \"new-price\",\n    style: {\n      fontSize: \"1rem\",\n      color: \"#ff5558\",\n      fontWeight: \"bold\"\n    }\n  }, \"Valentine's Price: \\u20B1\", formatNumber(product.campaign_price)))) : null, __jsx(\"div\", {\n    className: \"product-review\"\n  }, __jsx(\"div\", {\n    className: \"rating\"\n  }, __jsx(\"i\", {\n    className: \"fas fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fas fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fas fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fas fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fas fa-star\"\n  })), __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", {\n    className: \"rating-count\"\n  }, \"34 reviews\"))), __jsx(\"p\", null, product.description), __jsx(\"br\", null), __jsx(\"div\", {\n    className: \"product-add-to-cart\"\n  }, __jsx(\"div\", {\n    className: \"input-counter\"\n  }, __jsx(\"span\", {\n    className: \"minus-btn\",\n    onClick: DecreaseItem\n  }, __jsx(\"i\", {\n    className: \"fas fa-minus\"\n  })), __jsx(\"input\", {\n    type: \"text\",\n    value: state.qty,\n    min: state.min,\n    max: state.max,\n    onChange: e => setstate(_objectSpread(_objectSpread({}, state), {}, {\n      qty: e.target.value\n    }))\n  }), __jsx(\"span\", {\n    className: \"plus-btn\",\n    onClick: IncrementItem\n  }, __jsx(\"i\", {\n    className: \"fas fa-plus\"\n  })))), __jsx(AddonProducts, {\n    handleAddonCheck: handleAddonCheck\n  }), __jsx(\"div\", {\n    className: \"buy-checkbox-btn\"\n  }, __jsx(\"div\", {\n    className: \"item\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    onClick: () => handleAddToCartFromView(product)\n  }, __jsx(\"i\", {\n    className: \"fas fa-cart-plus\"\n  }), \" Add to Cart\"))), __jsx(\"div\", {\n    className: \"custom-payment-options\"\n  }, __jsx(\"span\", null, \"Guaranteed safe checkout:\"), __jsx(\"div\", {\n    className: \"payment-methods\"\n  }, __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", null, __jsx(\"img\", {\n    src: require(\"../../images/payment-image/1.svg\"),\n    alt: \"image\"\n  }))), __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", null, __jsx(\"img\", {\n    src: require(\"../../images/payment-image/2.svg\"),\n    alt: \"image\"\n  }))), __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", null, __jsx(\"img\", {\n    src: require(\"../../images/payment-image/3.svg\"),\n    alt: \"image\"\n  }))), __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", null, __jsx(\"img\", {\n    src: require(\"../../images/payment-image/4.svg\"),\n    alt: \"image\"\n  }))), __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", null, __jsx(\"img\", {\n    src: require(\"../../images/payment-image/5.svg\"),\n    alt: \"image\"\n  }))), __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", null, __jsx(\"img\", {\n    src: require(\"../../images/payment-image/6.svg\"),\n    alt: \"image\"\n  }))), __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", null, __jsx(\"img\", {\n    src: require(\"../../images/payment-image/7.svg\"),\n    alt: \"image\"\n  }))))))), sizeGuide ? __jsx(SizeGuide, {\n    closeSizeGuide: closeSizeGuide\n  }) : \"\", shipModal ? __jsx(Shipping, {\n    closeShipModal: closeShipModal\n  }) : \"\");\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addQuantityWithNumber: (id, qty) => {\n      dispatch(addQuantityWithNumber(id, qty));\n    },\n    addToCartAddons: (products, qty) => {\n      dispatch(addToCartAddons(products, qty));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ProductContent);","map":null,"metadata":{},"sourceType":"module"}