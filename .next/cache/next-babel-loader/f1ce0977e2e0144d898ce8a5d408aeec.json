{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport { addToCart, removeItemFromCompare } from '../../store/actions/cartActions';\nimport { ToastContainer, toast, Slide } from 'react-toastify';\nexport class Content extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleRemove\", id => {\n      this.props.removeItemFromCompare(id);\n      toast.error('Removed from compare list', {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    });\n\n    _defineProperty(this, \"handleAddToCart\", id => {\n      this.props.addToCart(id);\n      toast.success('Added to the cart', {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    });\n  }\n\n  render() {\n    let {\n      compare_products\n    } = this.props;\n    return __jsx(\"section\", {\n      className: \"compare-area ptb-60\"\n    }, __jsx(ToastContainer, {\n      transition: Slide\n    }), __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"div\", {\n      className: \"section-title\"\n    }, __jsx(\"h2\", null, __jsx(\"span\", {\n      className: \"dot\"\n    }), \" Compare Products\")), __jsx(\"div\", {\n      className: \"products-compare-table\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, compare_products.length ? compare_products.map((data, idx) => __jsx(\"div\", {\n      className: \"col-lg-3 col-md-6 col-sm-6\",\n      key: idx\n    }, __jsx(\"div\", {\n      className: \"remove-btn\"\n    }, __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      className: \"remove\",\n      onClick: e => {\n        e.preventDefault();\n        this.handleRemove(data.id);\n      }\n    }, __jsx(\"i\", {\n      className: \"far fa-trash-alt\"\n    })))), __jsx(\"div\", {\n      className: \"single-product-box\"\n    }, __jsx(\"div\", {\n      className: \"product-image\"\n    }, __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", null, __jsx(\"img\", {\n      src: data.image,\n      alt: \"image\"\n    })))), __jsx(\"div\", {\n      className: \"product-content\"\n    }, __jsx(\"h3\", null, __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", null, data.title))), __jsx(\"div\", {\n      className: \"product-price\"\n    }, __jsx(\"span\", {\n      className: \"new-price\"\n    }, \"$\", data.price)), __jsx(\"div\", {\n      className: \"rating\"\n    }, __jsx(\"i\", {\n      className: \"fas fa-star\"\n    }), __jsx(\"i\", {\n      className: \"fas fa-star\"\n    }), __jsx(\"i\", {\n      className: \"fas fa-star\"\n    }), __jsx(\"i\", {\n      className: \"fas fa-star\"\n    }), __jsx(\"i\", {\n      className: \"far fa-star\"\n    })), __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      className: \"btn btn-light\",\n      onClick: e => {\n        e.preventDefault();\n        this.handleAddToCart(data.id);\n      }\n    }, \"Add to Cart\")))))) : __jsx(\"div\", null, \"Empty\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    compare_products: state.addedItemsToCompare\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: id => {\n      dispatch(addToCart(id));\n    },\n    removeItemFromCompare: id => {\n      dispatch(removeItemFromCompare(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Content);","map":null,"metadata":{},"sourceType":"module"}